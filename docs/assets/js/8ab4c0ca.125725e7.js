"use strict";(self.webpackChunkaqua_docusaurus=self.webpackChunkaqua_docusaurus||[]).push([[8002],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=l(n),d=a,h=m["".concat(p,".").concat(d)]||m[d]||u[d]||i;return n?r.createElement(h,o(o({ref:t},c),{},{components:n})):r.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[m]="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},573:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:500},o="Change the implementation of semver and semverWithVersion",s={unversionedId:"reference/upgrade-guide/v2/change-semver",id:"reference/upgrade-guide/v2/change-semver",title:"Change the implementation of semver and semverWithVersion",description:"#1572 #1573",source:"@site/docs/reference/upgrade-guide/v2/change-semver.md",sourceDirName:"reference/upgrade-guide/v2",slug:"/reference/upgrade-guide/v2/change-semver",permalink:"/docs/reference/upgrade-guide/v2/change-semver",draft:!1,editUrl:"https://github.com/aquaproj/aquaproj.github.io/edit/main/docs/reference/upgrade-guide/v2/change-semver.md",tags:[],version:"current",sidebarPosition:500,frontMatter:{sidebar_position:500},sidebar:"tutorialSidebar",previous:{title:"Change the specification of require_checksum",permalink:"/docs/reference/upgrade-guide/v2/change-require_checksum"},next:{title:"Deprecate update-checksum's --deep option and change the default behaviour same as --deep option",permalink:"/docs/reference/upgrade-guide/v2/deprecate-update-checksum-deep-option"}},p={},l=[{value:"New specification of <code>semver</code>",id:"new-specification-of-semver",level:2},{value:"Why this change is needed",id:"why-this-change-is-needed",level:2}],c={toc:l},m="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"change-the-implementation-of-semver-and-semverwithversion"},"Change the implementation of ",(0,a.kt)("inlineCode",{parentName:"h1"},"semver")," and ",(0,a.kt)("inlineCode",{parentName:"h1"},"semverWithVersion")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua/pull/1572"},"#1572")," ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua/issues/1573"},"#1573")," "),(0,a.kt)("p",null,"The specification of ",(0,a.kt)("inlineCode",{parentName:"p"},"semver")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"semverWithVersion")," are a bit changed.\nSome features such as ",(0,a.kt)("inlineCode",{parentName:"p"},"~")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"^")," are removed.\nSpaces ",(0,a.kt)("inlineCode",{parentName:"p"}," ")," aren't treated as ",(0,a.kt)("inlineCode",{parentName:"p"},"AND")," operator. For ",(0,a.kt)("inlineCode",{parentName:"p"},"AND")," operator, you have to use comma ",(0,a.kt)("inlineCode",{parentName:"p"},","),"."),(0,a.kt)("p",null,"\ud83d\udc4e "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},">= 1.2 < 3.0.0\n")),(0,a.kt)("p",null,"\ud83d\udc4d "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},">= 1.2, < 3.0.0\n")),(0,a.kt)("p",null,"We think almost expressions are compatible with new specification."),(0,a.kt)("h2",{id:"new-specification-of-semver"},"New specification of ",(0,a.kt)("inlineCode",{parentName:"h2"},"semver")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"<operator> <version>[, <operator> <version> ...]\n")),(0,a.kt)("p",null,"Supported oeprators"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},">=")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"<=")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"!=")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},">")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"<")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"="))),(0,a.kt)("p",null,"Support multiple constraints separated with comma ",(0,a.kt)("inlineCode",{parentName:"p"},","),".\nMultiple constraints are evaluated as ",(0,a.kt)("inlineCode",{parentName:"p"},"AND")," comparison.\nSpaces are trimmed."),(0,a.kt)("h2",{id:"why-this-change-is-needed"},"Why this change is needed"),(0,a.kt)("p",null,"Prerelease versions aren't compared properly in ",(0,a.kt)("inlineCode",{parentName:"p"},"version_constraint")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"version_filter"),".\nThe comparison with prerelease versions is already evaluated as ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),".\nFor example, we expect ",(0,a.kt)("inlineCode",{parentName:"p"},"v1.1.0-1")," is greater than ",(0,a.kt)("inlineCode",{parentName:"p"},"v1.0.0"),", but the evaluation result of ",(0,a.kt)("inlineCode",{parentName:"p"},"version_constraint")," is ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,a.kt)("p",null,"This is due to third party library aqua depends on.\naqua uses ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/hashicorp/go-version"},"hashicorp/go-version"),"'s ",(0,a.kt)("a",{parentName:"p",href:"https://pkg.go.dev/github.com/hashicorp/go-version#Constraints.Check"},"Constraints#Check"),".\nThis function has the above bug.\nThis is obviously a bug and there was ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/hashicorp/go-version/issues/101"},"a bug report"),", but maintainers closed the issue and seems not to fix it."),(0,a.kt)("p",null,"So I considered migrating hashicorp/go-version to another library such as ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Masterminds/semver"},"Masterminds/semver"),".\nBut unfortunately, ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Masterminds/semver"},"Masterminds/semver")," has a same issue and the maintainer tells it's not bug."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/Masterminds/semver#checking-version-constraints"},"https://github.com/Masterminds/semver#checking-version-constraints")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/Masterminds/semver#working-with-prerelease-versions"},"https://github.com/Masterminds/semver#working-with-prerelease-versions"))),(0,a.kt)("p",null,"So I'm considering reimplementing ",(0,a.kt)("inlineCode",{parentName:"p"},"semver")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"semverWithVersion")," ourselves.\nFor aqua, some operators such as ",(0,a.kt)("inlineCode",{parentName:"p"},"~")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"^")," aren't needed."))}u.isMDXComponent=!0}}]);