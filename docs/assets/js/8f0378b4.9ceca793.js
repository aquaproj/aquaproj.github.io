"use strict";(self.webpackChunkaqua_docusaurus=self.webpackChunkaqua_docusaurus||[]).push([[7693],{1634:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>g});var t=n(8168),i=(n(6540),n(5680));const o={sidebar_position:100},r="Contributing",s={unversionedId:"products/aqua-registry/contributing",id:"products/aqua-registry/contributing",title:"Contributing",description:"How to contribute to Standard Registry. https://github.com/aquaproj/aqua-registry",source:"@site/docs/products/aqua-registry/contributing.md",sourceDirName:"products/aqua-registry",slug:"/products/aqua-registry/contributing",permalink:"/docs/products/aqua-registry/contributing",draft:!1,editUrl:"https://github.com/aquaproj/aquaproj.github.io/edit/main/docs/products/aqua-registry/contributing.md",tags:[],version:"current",sidebarPosition:100,frontMatter:{sidebar_position:100},sidebar:"tutorialSidebar",previous:{title:"aqua-registry",permalink:"/docs/products/aqua-registry/"},next:{title:"Changelog",permalink:"/docs/products/aqua-registry/changelog"}},l={},g=[{value:"See also",id:"see-also",level:2},{value:"Changelog of document and development workflow",id:"changelog-of-document-and-development-workflow",level:2},{value:"Should you create an Issue before sending a Pull Request?",id:"should-you-create-an-issue-before-sending-a-pull-request",level:2},{value:"aqua can&#39;t support some tools&#39; plugin mechanism",id:"aqua-cant-support-some-tools-plugin-mechanism",level:2},{value:"Note of Programing Language Support",id:"note-of-programing-language-support",level:2},{value:"Commit Signing",id:"commit-signing",level:2},{value:"Set up",id:"set-up",level:2},{value:"Structure of aqua-registry",id:"structure-of-aqua-registry",level:2},{value:"registry.yaml Documentation",id:"registryyaml-documentation",level:2},{value:"Development Tools",id:"development-tools",level:2},{value:"cmdx s - Scaffold configuration and test it in containers",id:"cmdx-s---scaffold-configuration-and-test-it-in-containers",level:3},{value:"cmdx t - Test a package in containers",id:"cmdx-t---test-a-package-in-containers",level:3},{value:"cmdx rm - Remove containers",id:"cmdx-rm---remove-containers",level:3},{value:"cmdx rmp - Remove an installed package from containers",id:"cmdx-rmp---remove-an-installed-package-from-containers",level:3},{value:"cmdx gr - Update <code>registry.yaml</code>",id:"cmdx-gr---update-registryyaml",level:3},{value:"cmdx con - Connect to a container",id:"cmdx-con---connect-to-a-container",level:3},{value:"Code Auto-generation",id:"code-auto-generation",level:2},{value:"GitHub Access Token",id:"github-access-token",level:2},{value:"Modifying Existing Packages",id:"modifying-existing-packages",level:2},{value:"Manual Modification",id:"manual-modification",level:2},{value:"When Configuration Needs to Change for Specific Versions",id:"when-configuration-needs-to-change-for-specific-versions",level:3},{value:"When Configuration Needs to Change for Specific OS/Arch",id:"when-configuration-needs-to-change-for-specific-osarch",level:3},{value:"When Version Cannot Be Found",id:"when-version-cannot-be-found",level:3},{value:"When Asset Cannot Be Found",id:"when-asset-cannot-be-found",level:3},{value:"When Command Cannot Be Found",id:"when-command-cannot-be-found",level:3},{value:"Adding Support for Specific OS / Architecture",id:"adding-support-for-specific-os--architecture",level:3},{value:"When Checksum Cannot Be Extracted from Checksum File",id:"when-checksum-cannot-be-extracted-from-checksum-file",level:3},{value:"When Checksum Verification Fails",id:"when-checksum-verification-fails",level:3},{value:"When cosign Verification Fails",id:"when-cosign-verification-fails",level:3},{value:"When SLSA Provenance Verification Fails",id:"when-slsa-provenance-verification-fails",level:3},{value:"When GitHub Artifact Attestations Verification Fails",id:"when-github-artifact-attestations-verification-fails",level:3},{value:"When Minisign Verification Fails",id:"when-minisign-verification-fails",level:3},{value:"Tool Naming Convention",id:"tool-naming-convention",level:2},{value:"Adding New Tools",id:"adding-new-tools",level:2},{value:"Customizing cmdx s with Configuration File",id:"customizing-cmdx-s-with-configuration-file",level:3},{value:"Retrying <code>cmdx s</code> Until It Works",id:"retrying-cmdx-s-until-it-works",level:3},{value:"Modifying Manually",id:"modifying-manually",level:3},{value:"Use <code>cmdx s</code> definitely",id:"use-cmdx-s-definitely",level:3},{value:"\ud83d\udca1 How to ignore some assets and versions",id:"-how-to-ignore-some-assets-and-versions",level:3},{value:"How to execute a package in your machine during development",id:"how-to-execute-a-package-in-your-machine-during-development",level:3},{value:"1. Execute a package in linux containers via <code>cmdx con</code>",id:"1-execute-a-package-in-linux-containers-via-cmdx-con",level:4},{value:"2. Import <code>pkgs/&lt;package&gt;/pkg.yaml</code> in aqua.yaml",id:"2-import-pkgspackagepkgyaml-in-aquayaml",level:4},{value:"3. Add aqua-all.yaml in <code>$AQUA_GLOBAL_CONFIG</code>",id:"3-add-aqua-allyaml-in-aqua_global_config",level:4},{value:"Supported OS and CPU Architecture",id:"supported-os-and-cpu-architecture",level:2},{value:"Test multiple versions",id:"test-multiple-versions",level:2},{value:"What&#39;s pkgs/**/pkg.yaml for?",id:"whats-pkgspkgyaml-for",level:2},{value:"Trouble shooting",id:"trouble-shooting",level:2},{value:"<code>cmdx new</code> fails to push a commit to the origin",id:"cmdx-new-fails-to-push-a-commit-to-the-origin",level:3}],c={toc:g},p="wrapper";function u({components:e,...a}){return(0,i.yg)(p,(0,t.A)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"contributing"},"Contributing"),(0,i.yg)("p",null,"How to contribute to Standard Registry. ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua-registry"},"https://github.com/aquaproj/aqua-registry")),(0,i.yg)("h2",{id:"see-also"},"See also"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"\u2b50 ",(0,i.yg)("a",{parentName:"li",href:"https://github.com/suzuki-shunsuke/oss-contribution-guide"},"OSS Contribution Guide")),(0,i.yg)("li",{parentName:"ul"},"\u2b50 ",(0,i.yg)("a",{parentName:"li",href:"/docs/develop-registry/registry-style-guide"},"Registry Style Guide")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/"},"Registry Configuration"))),(0,i.yg)("h2",{id:"changelog-of-document-and-development-workflow"},"Changelog of document and development workflow"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"/docs/products/aqua-registry/changelog"},"change log"),"."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"#note-of-programing-language-support"},"2025-01-19 Add ",(0,i.yg)("inlineCode",{parentName:"a"},"Note of Programing Language Support"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/docs/products/aqua-registry/changelog#2024-12-14"},"2024-12-14 Remove ",(0,i.yg)("inlineCode",{parentName:"a"},"cmdx new")," from the guide")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/docs/products/aqua-registry/changelog#2024-05-24"},"2024-05-24 The behaviour of ",(0,i.yg)("inlineCode",{parentName:"a"},"cmdx s"),", ",(0,i.yg)("inlineCode",{parentName:"a"},"cmdx t"),", and ",(0,i.yg)("inlineCode",{parentName:"a"},"cmdx new")," were changed."))),(0,i.yg)("h2",{id:"should-you-create-an-issue-before-sending-a-pull-request"},"Should you create an Issue before sending a Pull Request?"),(0,i.yg)("p",null,"Basically, you don't have to create an Issue before sending a Pull Request.\nBut if the pull request requires the discussion before reviewing, you have to create an Issue in advance."),(0,i.yg)("p",null,"For example, you don't have to create an Issue in the following cases."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Add a package"),(0,i.yg)("li",{parentName:"ul"},"Fix a typo")),(0,i.yg)("p",null,"On the other hand, for example if you want to change the directory structure in ",(0,i.yg)("inlineCode",{parentName:"p"},"pkgs")," or the workflow adding a package,\nyou have to create an Issue and describe what is changed and why the change is needed."),(0,i.yg)("h2",{id:"aqua-cant-support-some-tools-plugin-mechanism"},"aqua can't support some tools' plugin mechanism"),(0,i.yg)("p",null,"Some tools have the plugin mechanism."),(0,i.yg)("p",null,"e.g."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://docs.github.com/en/github-cli/github-cli/creating-github-cli-extensions"},"GitHub CLI Extension")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://developer.hashicorp.com/terraform/language/providers"},"Terraform provider")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://docs.gauge.org/plugin.html?os=macos&language=java&ide=null"},"Gauge plugin")),(0,i.yg)("li",{parentName:"ul"},"etc")),(0,i.yg)("p",null,"aqua simply installs commands in PATH (",(0,i.yg)("inlineCode",{parentName:"p"},"AQUA_ROOT_DIR/bin"),"), but some of these plugins expect to be installed in the other location.\nIf aqua can't support the plugin, we will reject the pull request adding the plugin to aqua-registry."),(0,i.yg)("p",null,"So if you send a pull request adding a plugin to aqua-registry, please check if aqua can support the plugin.\nWe aren't necessarily familiar with the plugin, so please explain where the plugin expects to be installed and how the plugin works in the pull request description."),(0,i.yg)("p",null,"If you don't know well, please create a pull request and consult us."),(0,i.yg)("h2",{id:"note-of-programing-language-support"},"Note of Programing Language Support"),(0,i.yg)("p",null,"aqua supports several programing languages such as Go and Node.js, but when we support a programing language, we need to be careful about where the programing language installs libraries and commands."),(0,i.yg)("p",null,"For instance, if the programing language installs commands in the same directory with the programing language itself, aqua can't add them to $PATH, meaning we can't execute them.\naqua doesn't support changing $PATH dynamically (We have no plan to support it as it makes aqua more complicated).\nNode.js's ",(0,i.yg)("inlineCode",{parentName:"p"},"npm i -g")," installs the same directory with node by default, so we gave up the support of Node.js before (Now aqua supports Node.js again because we can change the install path by ",(0,i.yg)("inlineCode",{parentName:"p"},"NPM_CONFIG_PREFIX"),").\nIf the language installs libraries in the same directory with it, the language can't refer installed libraries when we change the version of the language."),(0,i.yg)("p",null,"So before supporting a programing language, we should consider carefully if it really works well.\nMany programing languages have dedicated version managers, so maybe they are more appropriate."),(0,i.yg)("h2",{id:"commit-signing"},"Commit Signing"),(0,i.yg)("p",null,"All commits of pull requests must be signed.\nPlease see ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/suzuki-shunsuke/oss-contribution-guide/blob/main/docs/commit-signing.md"},"the document"),"."),(0,i.yg)("h2",{id:"set-up"},"Set up"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("a",{parentName:"li",href:"https://github.com/aquaproj/aqua-registry/fork"},"Please fork aquaproj/aqua-registry"),"."),(0,i.yg)("li",{parentName:"ol"},"Checkout the repository"),(0,i.yg)("li",{parentName:"ol"},"Run ",(0,i.yg)("inlineCode",{parentName:"li"},"aqua i -l")," in the repository root directory to install tools which are required for contribution.")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"aqua i -l\n")),(0,i.yg)("h2",{id:"structure-of-aqua-registry"},"Structure of aqua-registry"),(0,i.yg)("p",null,"Package-related code is located in the ",(0,i.yg)("inlineCode",{parentName:"p"},"pkgs/<package name>")," directory of ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua-registry"},"https://github.com/aquaproj/aqua-registry"),".\ne.g. ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua-registry/tree/main/pkgs/cli/cli"},"cli/cli"),"\nEach package directory contains the following files:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"pkg.yaml: List of versions installed during testing. This is essentially test data"),(0,i.yg)("li",{parentName:"ul"},"registry.yaml: Configuration. Each tool's registry.yaml is merged to generate the repository root registry.yaml"),(0,i.yg)("li",{parentName:"ul"},"scaffold.yaml: Optional. Configuration file for commands that auto-generate pkg.yaml and registry.yaml. Required when you want to change the auto-generation behavior")),(0,i.yg)("admonition",{type:"note"},(0,i.yg)("p",{parentName:"admonition"},"pkg.yaml is just test data. You can install versions not included in this file.")),(0,i.yg)("p",null,"There is also a registry.yaml at the repository root, which is a huge YAML file merging all registry.yaml files under ",(0,i.yg)("inlineCode",{parentName:"p"},"pkgs"),".\nWhen specifying Standard Registry in aqua.yaml, this repository root registry.yaml is referenced.\nTo modify the repository root registry.yaml, modify the registry.yaml under pkgs and run the ",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx gr")," command."),(0,i.yg)("h2",{id:"registryyaml-documentation"},"registry.yaml Documentation"),(0,i.yg)("p",null,"Please refer to ",(0,i.yg)("a",{parentName:"p",href:"/docs/reference/registry-config/"},"Registry Config"),".\nThere is also a ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua/blob/main/json-schema/registry.json"},"JSON Schema"),".\nThe registry.yaml files under pkgs have JSON Schema comments, so VSCode and similar editors can provide auto-completion."),(0,i.yg)("p",null,"Additionally, there are abundant examples under pkgs in aqua-registry.\nBy grepping here, you can see how much each configuration item is used and how to write them for reference."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-console"},"# Search with slsa_provenance\n$ git grep -l slsa_provenance pkgs  \npkgs/Zxilly/go-size-analyzer/registry.yaml\npkgs/aquaproj/aqua-registry-updater/registry.yaml\npkgs/aquaproj/example-go-slsa-provenance/registry.yaml\n...\n")),(0,i.yg)("h2",{id:"development-tools"},"Development Tools"),(0,i.yg)("admonition",{type:"info"},(0,i.yg)("p",{parentName:"admonition"},"Unfortunately, the current development tools depend on Shell Scripts and are unlikely to work on Windows (though they probably work on WSL).\n",(0,i.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua-registry/issues/32699"},"There is an issue to rewrite them in Go."))),(0,i.yg)("p",null,"CLIs for developing aqua-registry are provided.\nThese can be installed with aqua.\nCheck out aqua-registry and run ",(0,i.yg)("inlineCode",{parentName:"p"},"aqua i -l"),"."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"aqua i -l\n")),(0,i.yg)("p",null,"We use a task runner called ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/suzuki-shunsuke/cmdx"},"cmdx"),".\nYou can check tasks with ",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx help"),"."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"cmdx help\n")),(0,i.yg)("p",null,"Using development tools, you can generate files for each package (pkg.yaml, registry.yaml, scaffold.yaml) and test tool installation in containers.\nTests are performed in containers using the docker command, so you need the docker command and a compatible container engine.\nDocker Desktop would work fine of course.\nWe install ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/docker/cli"},"docker/cli")," and ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/abiosoft/colima"},"abiosoft/colima")," with aqua.\nPlease confirm that the docker command works."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"docker version\n")),(0,i.yg)("h3",{id:"cmdx-s---scaffold-configuration-and-test-it-in-containers"},"cmdx s - Scaffold configuration and test it in containers"),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"cmdx s <package name>")," generates a configuration file ",(0,i.yg)("inlineCode",{parentName:"p"},"pkgs/<package name>/registry.yaml")," and a test data file ",(0,i.yg)("inlineCode",{parentName:"p"},"pkgs/<package name>/pkg.yaml"),", and tests them in containers.\nIt gets data from GitHub Releases by GitHub API.\nBy default, it gets all releases, so it takes a bit long time if the repository has a lot of releases.\n",(0,i.yg)("a",{parentName:"p",href:"#use-cmdx-s-definitely"},(0,i.yg)("inlineCode",{parentName:"a"},"cmdx s")," isn't perfect, but you must use it when you add new packages.")),(0,i.yg)("h3",{id:"cmdx-t---test-a-package-in-containers"},"cmdx t - Test a package in containers"),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"cmdx t [<package name>]")," tests a package in containers.\nIf the branch name is ",(0,i.yg)("inlineCode",{parentName:"p"},"feat/<package name>"),", you can omit the argument ",(0,i.yg)("inlineCode",{parentName:"p"},"<package name>"),".\n",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx t")," copies files ",(0,i.yg)("inlineCode",{parentName:"p"},"pkgs/<package name>/{pkg.yaml,registry.yaml}")," in containers and test them.\nIf the test succeeds, ",(0,i.yg)("inlineCode",{parentName:"p"},"registry.yaml")," is updated."),(0,i.yg)("h3",{id:"cmdx-rm---remove-containers"},"cmdx rm - Remove containers"),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"cmdx rm")," removes containers.\n",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx s")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx t")," reuse containers, but if you want to test packages in clean environment, you can do it by removing containers."),(0,i.yg)("h3",{id:"cmdx-rmp---remove-an-installed-package-from-containers"},"cmdx rmp - Remove an installed package from containers"),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"cmdx rmp [<package name>]")," removes an installed package from containers.\nIf the branch name is ",(0,i.yg)("inlineCode",{parentName:"p"},"feat/<package name>"),", you can omit the argument ",(0,i.yg)("inlineCode",{parentName:"p"},"<package name>"),".\nIt runs ",(0,i.yg)("inlineCode",{parentName:"p"},"aqua rm <package name>")," and removes ",(0,i.yg)("inlineCode",{parentName:"p"},"aqua-checksums.json")," in containers.\nThis task is useful when you want to test packages in clean environment."),(0,i.yg)("h3",{id:"cmdx-gr---update-registryyaml"},"cmdx gr - Update ",(0,i.yg)("inlineCode",{parentName:"h3"},"registry.yaml")),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"cmdx gr")," merges ",(0,i.yg)("inlineCode",{parentName:"p"},"pkgs/**/registry.yaml")," and updates ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua-registry/blob/main/registry.yaml"},"registry.yaml"),".\nPlease don't edit ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua-registry/blob/main/registry.yaml"},"registry.yaml")," directly.\nWhen you edit ",(0,i.yg)("inlineCode",{parentName:"p"},"pkgs/**/registry.yaml"),", please run ",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx gr")," to reflect the update to ",(0,i.yg)("inlineCode",{parentName:"p"},"registry.yaml")," in the repository."),(0,i.yg)("h3",{id:"cmdx-con---connect-to-a-container"},"cmdx con - Connect to a container"),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"cmdx con [<os>] [<arch>]")," connect to a given container.\n",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx s")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx t")," tests packages in containers.\n",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx con")," is useful to look into the trouble in containers.\nBy default, ",(0,i.yg)("inlineCode",{parentName:"p"},"<os>")," is ",(0,i.yg)("inlineCode",{parentName:"p"},"linux")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"<arch>")," is CPU architecture of your machine."),(0,i.yg)("h2",{id:"code-auto-generation"},"Code Auto-generation"),(0,i.yg)("p",null,"Writing configuration files for each package from scratch is difficult and has quality issues.\nTherefore, commands for auto-generating code are provided.\nWhen adding a new package, always use this command.\nCode written manually from scratch is not quality assured, so Pull Requests will not be accepted.\nHowever, code auto-generation is not perfect and often generates incomplete code.\nIn that case, you need to manually fix the generated code."),(0,i.yg)("p",null,"aqua supports various package types, but currently auto-generation mainly supports only ",(0,i.yg)("inlineCode",{parentName:"p"},"github_release")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"cargo"),".\nWhen generating code for other packages like ",(0,i.yg)("inlineCode",{parentName:"p"},"http")," package, specify ",(0,i.yg)("inlineCode",{parentName:"p"},"-l 1")," to generate only a template and write the rest manually."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},'cmdx s -l 1 "<package name>"\n')),(0,i.yg)("h2",{id:"github-access-token"},"GitHub Access Token"),(0,i.yg)("p",null,"Development tools execute GitHub API to get lists of GitHub Releases and assets.\nIt works without an access token, but the possibility of hitting API rate limits increases.\nHitting API rate limits can prevent normal code generation or cause tests to fail.\nYou can pass an access token through environment variables ",(0,i.yg)("inlineCode",{parentName:"p"},"GITHUB_TOKEN")," or ",(0,i.yg)("inlineCode",{parentName:"p"},"AQUA_GITHUB_TOKEN"),".\nIf these environment variables are not set, it will try to get an access token using the ",(0,i.yg)("inlineCode",{parentName:"p"},"gh auth token")," command.\nNo special permissions are needed as it only reads public repository resources."),(0,i.yg)("h2",{id:"modifying-existing-packages"},"Modifying Existing Packages"),(0,i.yg)("p",null,"When modifying existing packages, you need to modify code under ",(0,i.yg)("inlineCode",{parentName:"p"},"pkgs/<package name>"),".\nThere are several modification methods:"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"Manually modify the code"),(0,i.yg)("li",{parentName:"ol"},"Regenerate the code from scratch with commands"),(0,i.yg)("li",{parentName:"ol"},"Auto-generate code for the latest version and manually modify based on that")),(0,i.yg)("p",null,"Which method to use depends on the state of the original code.\nCode auto-generation has been improved many times.\nTherefore, there is low-quality code generated before improvements.\nSuch code may be better regenerated from scratch rather than manually fixed."),(0,i.yg)("p",null,"One characteristic to identify if code is old is how ",(0,i.yg)("inlineCode",{parentName:"p"},"version_constraint")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"version_overrides")," are written.\nIn the new style, it basically looks like this:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-yaml"},'  version_constraint: "false" # Root version_constraint is "false"\n  version_overrides:\n    - version_constraint: semver("<= 0.1.0") # Version constraints use <, <= not >, >= (basically <=)\n      # ...\n    # ...\n    - version_constraint: "true" # End with "true" for latest version configuration\n      # ...\n')),(0,i.yg)("p",null,"In the old style, ",(0,i.yg)("inlineCode",{parentName:"p"},"version_overrides")," is often not defined.\nIn this case, it's likely better to regenerate from scratch.\nHowever, as mentioned earlier, auto-generation doesn't support package types other than ",(0,i.yg)("inlineCode",{parentName:"p"},"github_release")," or ",(0,i.yg)("inlineCode",{parentName:"p"},"cargo"),", so manual modification will be necessary."),(0,i.yg)("p",null,"Also, ",(0,i.yg)("a",{parentName:"p",href:"https://aquaproj.github.io/docs/reference/registry-config/aliases"},"aliases")," and ",(0,i.yg)("a",{parentName:"p",href:"https://aquaproj.github.io/docs/reference/registry-config/files"},"files")," cannot be auto-generated, so you need to modify the auto-generated code referring to the original code."),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"3. Auto-generate code for the latest version and manually modify based on that")," is effective when the package no longer installs with the latest version but you want to reuse existing code (don't want to regenerate from scratch).\nRunning the following command generates code for the latest version:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},'aqua gr -l 1 "<package name>"\n')),(0,i.yg)("p",null,"Fix this and add it to the end of ",(0,i.yg)("inlineCode",{parentName:"p"},"version_overrides")," in the original code and modify version_constraint."),(0,i.yg)("h2",{id:"manual-modification"},"Manual Modification"),(0,i.yg)("p",null,"When manual modification is necessary, you'll need to look at error messages and fix appropriately."),(0,i.yg)("h3",{id:"when-configuration-needs-to-change-for-specific-versions"},"When Configuration Needs to Change for Specific Versions"),(0,i.yg)("p",null,"You can change configuration by version using ",(0,i.yg)("a",{parentName:"p",href:"/docs/reference/registry-config/version-overrides"},"version_overrides and version_constraint"),"."),(0,i.yg)("h3",{id:"when-configuration-needs-to-change-for-specific-osarch"},"When Configuration Needs to Change for Specific OS/Arch"),(0,i.yg)("p",null,"You can change configuration by OS/Arch with ",(0,i.yg)("a",{parentName:"p",href:"/docs/reference/registry-config/overrides"},"overrides"),"."),(0,i.yg)("h3",{id:"when-version-cannot-be-found"},"When Version Cannot Be Found"),(0,i.yg)("p",null,"Sometimes a released version is deleted and disappears.\nIn that case, delete that version from pkg.yaml.\nAnd delete configuration related to that version from registry.yaml (if any).\nHowever, ",(0,i.yg)("a",{parentName:"p",href:"/docs/reference/registry-config/no_asset"},"no_asset")," and ",(0,i.yg)("a",{parentName:"p",href:"/docs/reference/registry-config/error_message"},"error_message")," don't need to be deleted.\nYou may or may not add ",(0,i.yg)("inlineCode",{parentName:"p"},"no_asset")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"error_message"),"."),(0,i.yg)("h3",{id:"when-asset-cannot-be-found"},"When Asset Cannot Be Found"),(0,i.yg)("p",null,"When an asset cannot be found, either the asset name is wrong or the asset hasn't been released."),(0,i.yg)("p",null,"Running the ",(0,i.yg)("inlineCode",{parentName:"p"},'cmdx lsa [-r <repository name>] "<version>"')," command outputs a list of assets, which is convenient."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-console"},'$ cmdx lsa -repo suzuki-shunsuke/pinact v3.0.0\n+ REPO=${REPO#https://github.com/}\nrepo=$(bash scripts/get_test_pkg.sh "$REPO")\n\ngh release view --json assets --jq ".assets[].name" -R "$repo" "$VERSION"\n\nmultiple.intoto.jsonl\npinact_3.0.0_checksums.txt\npinact_3.0.0_checksums.txt.pem\npinact_3.0.0_checksums.txt.sig\npinact_darwin_amd64.tar.gz\npinact_darwin_arm64.tar.gz\npinact_linux_amd64.tar.gz\npinact_linux_arm64.tar.gz\npinact_windows_amd64.zip\npinact_windows_arm64.zip\n')),(0,i.yg)("p",null,"It's common for new GitHub Releases or tags to be released without assets being released.\nWhen there are no assets, the following causes are possible:"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"Release is simply delayed. It will be released if you wait"),(0,i.yg)("li",{parentName:"ol"},"CI failed midway and wasn't released"),(0,i.yg)("li",{parentName:"ol"},"CI skipped the release")),(0,i.yg)("p",null,"These are not problems with aqua or aqua-registry.\nFor example, if such a problem occurs with ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/suzuki-shunsuke/pinact"},"suzuki-shunsuke/pinact")," and you want to take action, it would be good to create an issue or PR at ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/suzuki-shunsuke/pinact"},"https://github.com/suzuki-shunsuke/pinact"),".\nAs aqua-registry maintainers, we often encounter these problems.\nEach time, we report problems to various repositories or fix CI."),(0,i.yg)("p",null,"It's common for specific os/arch not to be supported.\nIn that case, you need to exclude that os/arch from ",(0,i.yg)("inlineCode",{parentName:"p"},"supported_envs"),"."),(0,i.yg)("p",null,"If the asset name is wrong, the asset naming convention may have changed from a certain version.\nFor example, the GoReleaser configuration was modified and the format became zip, or the version disappeared from the asset name, etc.\nIn that case, you need to modify the asset in registry.yaml.\nIf the name changed due to a mistake on the tool side, it would be kind to report the problem or create a PR to fix it."),(0,i.yg)("h3",{id:"when-command-cannot-be-found"},"When Command Cannot Be Found"),(0,i.yg)("p",null,"When a command cannot be found, the following possibilities exist:"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"Command name is wrong"),(0,i.yg)("li",{parentName:"ol"},"Command name changed"),(0,i.yg)("li",{parentName:"ol"},"Path is wrong"),(0,i.yg)("li",{parentName:"ol"},"Target os/arch is excluded by supported_envs")),(0,i.yg)("p",null,"In these cases, you need to modify the ",(0,i.yg)("inlineCode",{parentName:"p"},"files")," configuration."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-yaml"},"files:\n  - name: <command name>\n    src: <relative path to command executable>\n")),(0,i.yg)("p",null,"By default, the command name is the last element when splitting the package name by ",(0,i.yg)("inlineCode",{parentName:"p"},"/"),".\nSo for ",(0,i.yg)("inlineCode",{parentName:"p"},"cli/cli")," it becomes ",(0,i.yg)("inlineCode",{parentName:"p"},"cli"),", but the actual command name is ",(0,i.yg)("inlineCode",{parentName:"p"},"gh"),", so you need to explicitly specify ",(0,i.yg)("inlineCode",{parentName:"p"},"files"),"."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-yaml"},"files:\n  - name: gh\n")),(0,i.yg)("p",null,"Note that even on Windows, ",(0,i.yg)("inlineCode",{parentName:"p"},".exe")," is not added to the name."),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"src")," is the relative path where the command executable is located when extracting assets like tarball or zip.\nBy default, it's the same as ",(0,i.yg)("inlineCode",{parentName:"p"},"name"),".\nFor gh, since the path is different, you need to specify ",(0,i.yg)("inlineCode",{parentName:"p"},"src"),"."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-yaml"},"    files:\n      - name: gh\n        src: gh_{{trimV .Version}}_{{.OS}}_{{.Arch}}/bin/gh\n")),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua-registry/blob/dc98ca0c3314ae3cface74556a295a4cb0a95918/pkgs/cli/cli/registry.yaml#L7-L9"},"https://github.com/aquaproj/aqua-registry/blob/dc98ca0c3314ae3cface74556a295a4cb0a95918/pkgs/cli/cli/registry.yaml#L7-L9")),(0,i.yg)("p",null,"The auto-generation tool currently cannot auto-generate ",(0,i.yg)("inlineCode",{parentName:"p"},"files"),".\nTherefore, manual modification is necessary."),(0,i.yg)("h3",{id:"adding-support-for-specific-os--architecture"},"Adding Support for Specific OS / Architecture"),(0,i.yg)("p",null,"Sometimes a tool supports new OS/Architecture from a specific version but it's not reflected in registry.yaml and remains uninstallable.\nIn that case, you need to add that OS/Architecture to ",(0,i.yg)("inlineCode",{parentName:"p"},"supported_envs"),"."),(0,i.yg)("h3",{id:"when-checksum-cannot-be-extracted-from-checksum-file"},"When Checksum Cannot Be Extracted from Checksum File"),(0,i.yg)("p",null,"Please see ",(0,i.yg)("a",{parentName:"p",href:"/docs/reference/registry-config/checksum"},"the document"),"."),(0,i.yg)("h3",{id:"when-checksum-verification-fails"},"When Checksum Verification Fails"),(0,i.yg)("p",null,"Please see ",(0,i.yg)("a",{parentName:"p",href:"/docs/reference/registry-config/checksum"},"the document"),"."),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"Checksum written in checksum file is wrong => Disable checksum")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-yaml"},"checksum:\n  enabled: false\n")),(0,i.yg)("p",null,"Or delete the checksum configuration since it's disabled by default."),(0,i.yg)("admonition",{type:"info"},(0,i.yg)("p",{parentName:"admonition"},'The checksum enable/disable setting in registry configuration is just a setting for "whether to download checksum file and get checksum".\nEven if this is disabled, if checksum verification is enabled in aqua.yaml, checksum verification will be performed.\nIn that case, it actually downloads the asset, calculates the checksum, and records it in aqua-checksums.json.\nThere is also an issue for getting checksum via GitHub API.')),(0,i.yg)("ol",{start:2},(0,i.yg)("li",{parentName:"ol"},"Extracting wrong string from checksum file")),(0,i.yg)("p",null,"Modify extraction parameters or disable checksum."),(0,i.yg)("ol",{start:3},(0,i.yg)("li",{parentName:"ol"},"Wrong checksum algorithm (sha1, sha256, sha512, md5, etc) => Fix the algorithm")),(0,i.yg)("h3",{id:"when-cosign-verification-fails"},"When cosign Verification Fails"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"/docs/reference/registry-config/cosign"},"Please see the document"),"."),(0,i.yg)("h3",{id:"when-slsa-provenance-verification-fails"},"When SLSA Provenance Verification Fails"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"/docs/reference/registry-config/slsa-provenance"},"Please see the document"),"."),(0,i.yg)("h3",{id:"when-github-artifact-attestations-verification-fails"},"When GitHub Artifact Attestations Verification Fails"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"/docs/reference/registry-config/github-artifact-attestations"},"Please see the document"),"."),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"signer_workflow")," might be wrong.\nIf attestations are not generated for a specific version in the first place, delete the github_artifact_attestations configuration."),(0,i.yg)("p",null,"The github_artifact_attestations configuration cannot be auto-generated currently.\nTherefore, when adding a new tool, check if attestations are generated and add the configuration if they are."),(0,i.yg)("h3",{id:"when-minisign-verification-fails"},"When Minisign Verification Fails"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"/docs/reference/registry-config/minisign"},"Please see the document"),"."),(0,i.yg)("p",null,"The minisign configuration might be wrong.\nIf minisign signing is not performed for a specific version in the first place, delete the minisign configuration."),(0,i.yg)("h2",{id:"tool-naming-convention"},"Tool Naming Convention"),(0,i.yg)("p",null,"To avoid name conflicts, tool names must include ",(0,i.yg)("inlineCode",{parentName:"p"},"/")," (namespace-like meaning)."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"NG: ",(0,i.yg)("inlineCode",{parentName:"li"},"terraform")),(0,i.yg)("li",{parentName:"ul"},"OK: ",(0,i.yg)("inlineCode",{parentName:"li"},"hashicorp/terraform"))),(0,i.yg)("p",null,"If the tool code is managed on GitHub, match the repository name.\nIf multiple tools are managed in that repository, change the name for each tool."),(0,i.yg)("p",null,"e.g. ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/winebarrel/cronplan"},"winebarrel/cronplan")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"winebarrel/cronplan/cronmatch")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"winebarrel/cronplan/cronplan")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"winebarrel/cronplan/cronviz"))),(0,i.yg)("p",null,"Packages hosted outside GitHub should have naming that distinguishes them from GitHub.\n",(0,i.yg)("inlineCode",{parentName:"p"},"cargo")," packages become ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua-registry/tree/main/pkgs/crates.io"},"crates.io/{crate name}"),".\nPlatforms other than GitHub like GitLab are not actively supported, but some are supported as http type packages.\n",(0,i.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua-registry/tree/main/pkgs/gitlab.com"},"GitLab uses ",(0,i.yg)("inlineCode",{parentName:"a"},"gitlab.com/<repository name>"),".")),(0,i.yg)("h2",{id:"adding-new-tools"},"Adding New Tools"),(0,i.yg)("p",null,"When submitting a Pull Request to add a new tool, there's no need to create an Issue."),(0,i.yg)("p",null,"Run ",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx s")," to auto-generate code."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},'cmdx s "<tool name>"\n')),(0,i.yg)("p",null,"e.g."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"cmdx s cli/cli\n")),(0,i.yg)("p",null,"For package types other than github_release, specify ",(0,i.yg)("inlineCode",{parentName:"p"},"-l 1"),"."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},'cmdx s -l 1 "<package name>"\n')),(0,i.yg)("p",null,"cmdx s generates a branch ",(0,i.yg)("inlineCode",{parentName:"p"},"feat/<package name>"),", code, and commit, and tests using containers."),(0,i.yg)("admonition",{type:"caution"},(0,i.yg)("p",{parentName:"admonition"},(0,i.yg)("inlineCode",{parentName:"p"},"cmdx s")," creates a commit, but please don't edit the commit by ",(0,i.yg)("inlineCode",{parentName:"p"},"git commit --amend"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"git rebase"),", or somehow.\n",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx s")," creates a commit to distinguish scaffolded code from manual changes.\nPlease add new commits if you update code.")),(0,i.yg)("admonition",{type:"info"},(0,i.yg)("p",{parentName:"admonition"},"This command may sometimes fail tests and output a large amount of error messages, but don't be overwhelmed by those error messages.\nTest failures are expected.")),(0,i.yg)("h3",{id:"customizing-cmdx-s-with-configuration-file"},"Customizing cmdx s with Configuration File"),(0,i.yg)("admonition",{type:"note"},(0,i.yg)("p",{parentName:"admonition"},"In many cases, this is unnecessary.\nAlso, you should not use this feature carelessly.")),(0,i.yg)("p",null,"Sometimes ",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx s")," generation doesn't work in one go.\nFor github_release packages, ",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx s")," gets lists of GitHub Releases and assets via GitHub API and auto-generates configuration based on that.\nHowever, sometimes you need to exclude specific versions or assets.\nFor example, if multiple CLIs are published in the same repository, if you don't exclude assets from other CLIs, code might be generated based on asset names from other CLIs.\nAlso, if multiple tools are published in the same repository, versions might have different prefixes for different tools.\nIn that case, if you don't ignore versions from other tools, code likely won't be generated correctly."),(0,i.yg)("p",null,"In such cases, follow these steps:"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"Generate a template configuration file ",(0,i.yg)("inlineCode",{parentName:"li"},"aqua-generate-registry.yaml")," for ",(0,i.yg)("inlineCode",{parentName:"li"},"cmdx s")," with ",(0,i.yg)("inlineCode",{parentName:"li"},"aqua gr -init <package name>")),(0,i.yg)("li",{parentName:"ol"},"Modify the configuration file ",(0,i.yg)("inlineCode",{parentName:"li"},"aqua-generate-registry.yaml")),(0,i.yg)("li",{parentName:"ol"},"Generate code with ",(0,i.yg)("inlineCode",{parentName:"li"},'cmdx s -c "<configuration file>" "<package name>"'))),(0,i.yg)("p",null,"You can configure the following:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"version_filter"),": Versions not matching this condition are excluded"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"version_prefix"),": Versions without this prefix are excluded"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"all_assets_filter"),": Assets not matching this condition are excluded")),(0,i.yg)("p",null,"However, using this feature carelessly can exclude things that shouldn't be excluded, so it shouldn't be used lightly.\n",(0,i.yg)("inlineCode",{parentName:"p"},"all_assets_filter")," in particular requires caution. This is because it can accidentally exclude checksum files like ",(0,i.yg)("inlineCode",{parentName:"p"},"SHA256SUM")," or ",(0,i.yg)("inlineCode",{parentName:"p"},"checksums.txt"),", and it's difficult to notice if you've excluded them.\nTherefore, you should first generate code without exclusion settings, and if unnecessary things are mixed in the generated code, write settings that explicitly exclude only those (without making the scope too broad to avoid excluding extra things)."),(0,i.yg)("admonition",{type:"caution"},(0,i.yg)("p",{parentName:"admonition"},"Note that ",(0,i.yg)("inlineCode",{parentName:"p"},"version_filter")," is not a feature for dropping support for old versions.\n",(0,i.yg)("inlineCode",{parentName:"p"},"version_constraint"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"no_asset"),", and ",(0,i.yg)("inlineCode",{parentName:"p"},"error_message")," are used for dropping support for old versions."),(0,i.yg)("p",{parentName:"admonition"},(0,i.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua-registry/blob/191f2136c10b1eb962dd43c8f421af417b1b3a16/pkgs/Shopify/ejson/registry.yaml#L8-L10"},"https://github.com/aquaproj/aqua-registry/blob/191f2136c10b1eb962dd43c8f421af417b1b3a16/pkgs/Shopify/ejson/registry.yaml#L8-L10"))),(0,i.yg)("h3",{id:"retrying-cmdx-s-until-it-works"},"Retrying ",(0,i.yg)("inlineCode",{parentName:"h3"},"cmdx s")," Until It Works"),(0,i.yg)("admonition",{type:"note"},(0,i.yg)("p",{parentName:"admonition"},"In many cases, this is unnecessary.")),(0,i.yg)("p",null,"As mentioned earlier, code generation with ",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx s")," doesn't always work on the first try.\nSometimes you need to repeat it several times."),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"Generate code without configuration file ",(0,i.yg)("inlineCode",{parentName:"li"},"cmdx s")),(0,i.yg)("li",{parentName:"ol"},"Check the generated code, and if extra versions or assets are included, delete the generated branch")),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"cmdx s")," generates a branch and commit, but if it's before opening a Pull Request, you can delete them without problems."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},'git checkout main\ngit branch -D "feat/<package name>"\n')),(0,i.yg)("ol",{start:3},(0,i.yg)("li",{parentName:"ol"},"Generate configuration file ",(0,i.yg)("inlineCode",{parentName:"li"},"aqua gr -init")),(0,i.yg)("li",{parentName:"ol"},"Modify configuration file and generate code ",(0,i.yg)("inlineCode",{parentName:"li"},"cmdx s")),(0,i.yg)("li",{parentName:"ol"},"Repeat 2, 4 until extra versions and assets are excluded")),(0,i.yg)("h3",{id:"modifying-manually"},"Modifying Manually"),(0,i.yg)("p",null,"If installation of multiple versions is failing and the log is hard to read, it's good to comment out some versions in pkg.yaml and tackle problems one by one.\nWhen modifying configuration, refer to ",(0,i.yg)("a",{parentName:"p",href:"#manual-modification"},"Manual Modification")," and ",(0,i.yg)("a",{parentName:"p",href:"/docs/develop-registry/registry-style-guide/"},"Style Guide"),".\nAfter modification, run ",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx t")," to confirm it can be installed correctly.\nRepeat modification and confirmation until it can be installed."),(0,i.yg)("p",null,"When you're done with modifications, or if you're not sure how to fix it, submit a Pull Request."),(0,i.yg)("admonition",{type:"note"},(0,i.yg)("p",{parentName:"admonition"},"The ",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx new")," command has been removed from the standard procedure.\nHowever, the command itself remains and can still be used.\nThis command has large environment dependencies and didn't work well for some users, making troubleshooting and support difficult.\nSince you can create Pull Requests without using ",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx new"),", we decided to remove it from the standard procedure.\n",(0,i.yg)("a",{parentName:"p",href:"/docs/products/aqua-registry/changelog#why-did-we-remove-cmdx-new-from-the-guide"},"See also changelog."))),(0,i.yg)("h3",{id:"use-cmdx-s-definitely"},"Use ",(0,i.yg)("inlineCode",{parentName:"h3"},"cmdx s")," definitely"),(0,i.yg)("p",null,"We don't accept pull requests not following this guide.\nEspecially, we don't accept pull requests not using ",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx s"),".\nStandard Registry must support not only the latest version but also almost all versions and ",(0,i.yg)("a",{parentName:"p",href:"#supported-os-and-cpu-architecture"},"various platforms"),".\nMany tools have so many versions that people can't check all of them manually.\nSo we can't trust the code not using ",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx s"),".\n",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx s")," checks all GitHub Releases and generates code supporting all of them (Strictly speaking, if there are too many GitHub Releases we have to restrict the number of GitHub Releases, though ",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx s")," can still check over 200 versions).\n",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx s")," generates much better code than us."),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"cmdx s")," isn't perfect and sometimes ",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx s")," causes errors and generates invalid code.\nThen you have to fix the code according to the error message.\n",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx s")," supports only ",(0,i.yg)("inlineCode",{parentName:"p"},"github_release")," type packages, so for other package types you have to fix the code.\nEven if so, you must still use ",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx s"),".\n",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx s")," guarantees the quality of code."),(0,i.yg)("h3",{id:"-how-to-ignore-some-assets-and-versions"},"\ud83d\udca1 How to ignore some assets and versions"),(0,i.yg)("p",null,"You can ignore some assets and versions to scaffold better configuration files."),(0,i.yg)("admonition",{type:"caution"},(0,i.yg)("p",{parentName:"admonition"},"Be careful to use this feature as it may exclude assets and versions unexpectedly.\nEspecially, ",(0,i.yg)("inlineCode",{parentName:"p"},"all_assets_filter")," may exclude assets such as checksum files.\nWe recommend to scaffold codes without this feature first.\nThen if ",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx s")," can't scaffold good codes due to some noisy versions or assets, you should re-scaffold code using this feature.\nAbout ",(0,i.yg)("inlineCode",{parentName:"p"},"all_assets_filter"),", we recommend specifying patterns to exclude assets (deny list) rather than specifying patterns to include assets (allow list)."),(0,i.yg)("p",{parentName:"admonition"},"e.g."),(0,i.yg)("pre",{parentName:"admonition"},(0,i.yg)("code",{parentName:"pre",className:"language-yaml"},'all_assets_filter: not (Asset contains "static")\n'))),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"Create ",(0,i.yg)("inlineCode",{parentName:"li"},"aqua-generate-registry.yaml")," by ",(0,i.yg)("inlineCode",{parentName:"li"},"aqua gr --init")," command:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"aqua gr --init <package name>\n")),(0,i.yg)("ol",{start:2},(0,i.yg)("li",{parentName:"ol"},"Edit ",(0,i.yg)("inlineCode",{parentName:"li"},"aqua-generate-registry.yaml"),":")),(0,i.yg)("p",null,"Example 1. Filter assets:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-yaml"},'name: argoproj/argo-rollouts\nall_assets_filter: not ((Asset matches "rollouts-controller") or (Asset matches "rollout-controller"))\n')),(0,i.yg)("p",null,"Example 2. Filter versions by ",(0,i.yg)("inlineCode",{parentName:"p"},"version_prefix"),":"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-yaml"},"name: grpc/grpc-go/protoc-gen-go-grpc\nversion_prefix: cmd/protoc-gen-go-grpc/\n")),(0,i.yg)("p",null,"Example 3. Filter versions by ",(0,i.yg)("inlineCode",{parentName:"p"},"version_filter"),":"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-yaml"},'name: crate-ci/typos\nversion_filter: not (Version startsWith "varcon-")\n')),(0,i.yg)("ol",{start:3},(0,i.yg)("li",{parentName:"ol"},"Run ",(0,i.yg)("inlineCode",{parentName:"li"},"cmdx s")," with ",(0,i.yg)("inlineCode",{parentName:"li"},"aqua-generate-registry.yaml"))),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"cmdx s -c aqua-generate-registry.yaml\n")),(0,i.yg)("h3",{id:"how-to-execute-a-package-in-your-machine-during-development"},"How to execute a package in your machine during development"),(0,i.yg)("p",null,"There are several ways"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"Execute a package in linux containers via ",(0,i.yg)("inlineCode",{parentName:"li"},"cmdx con")),(0,i.yg)("li",{parentName:"ol"},"Import ",(0,i.yg)("inlineCode",{parentName:"li"},"pkgs/<package>/pkg.yaml")," in ",(0,i.yg)("a",{parentName:"li",href:"https://github.com/aquaproj/aqua-registry/blob/main/aqua.yaml"},"aqua.yaml")),(0,i.yg)("li",{parentName:"ol"},"Add ",(0,i.yg)("a",{parentName:"li",href:"https://github.com/aquaproj/aqua-registry/blob/main/aqua-all.yaml"},"aqua-all.yaml")," in ",(0,i.yg)("inlineCode",{parentName:"li"},"$AQUA_GLOBAL_CONFIG"))),(0,i.yg)("h4",{id:"1-execute-a-package-in-linux-containers-via-cmdx-con"},"1. Execute a package in linux containers via ",(0,i.yg)("inlineCode",{parentName:"h4"},"cmdx con")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-console"},"$ cmdx con\n+ bash scripts/connect.sh\n[INFO] Connecting to the container aqua-registry (linux/arm64)\n")),(0,i.yg)("p",null,"Then you can execute a package in the container."),(0,i.yg)("h4",{id:"2-import-pkgspackagepkgyaml-in-aquayaml"},"2. Import ",(0,i.yg)("inlineCode",{parentName:"h4"},"pkgs/<package>/pkg.yaml")," in aqua.yaml"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-yaml"},"packages:\n  # ...\n  - import: pkgs/<package>/pkg.yaml\n")),(0,i.yg)("p",null,"Please don't commit this change."),(0,i.yg)("p",null,"You need to run ",(0,i.yg)("inlineCode",{parentName:"p"},"aqua policy allow")," to use the local registry."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"aqua policy allow\n")),(0,i.yg)("p",null,"Then you can execute the package."),(0,i.yg)("h4",{id:"3-add-aqua-allyaml-in-aqua_global_config"},"3. Add aqua-all.yaml in ",(0,i.yg)("inlineCode",{parentName:"h4"},"$AQUA_GLOBAL_CONFIG")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"export AQUA_GLOBAL_CONFIG=$PWD/aqua-all.yaml:$AQUA_GLOBAL_CONFIG\n")),(0,i.yg)("p",null,"You need to run ",(0,i.yg)("inlineCode",{parentName:"p"},"aqua policy allow")," to use the local registry."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"aqua policy allow\n")),(0,i.yg)("p",null,"Then you can execute all packages."),(0,i.yg)("h2",{id:"supported-os-and-cpu-architecture"},"Supported OS and CPU Architecture"),(0,i.yg)("p",null,"Please consider the following OS and CPU Architecture."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"OS",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"windows"),(0,i.yg)("li",{parentName:"ul"},"darwin"),(0,i.yg)("li",{parentName:"ul"},"linux"))),(0,i.yg)("li",{parentName:"ul"},"CPU Architecture",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"amd64"),(0,i.yg)("li",{parentName:"ul"},"arm64")))),(0,i.yg)("p",null,"We test the registry in CI on the above environments by GitHub Actions' build matrix."),(0,i.yg)("h2",{id:"test-multiple-versions"},"Test multiple versions"),(0,i.yg)("p",null,"If the package has the field ",(0,i.yg)("a",{parentName:"p",href:"/docs/reference/registry-config/version-overrides"},"version_overrides"),",\nplease add not only the latest version but also old versions in ",(0,i.yg)("inlineCode",{parentName:"p"},"pkg.yaml")," to test if old versions can be installed properly."),(0,i.yg)("p",null,"e.g. ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua-registry/blob/main/pkgs/scaleway/scaleway-cli/pkg.yaml"},"pkg.yaml")," ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua-registry/blob/main/pkgs/scaleway/scaleway-cli/registry.yaml"},"registry.yaml")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-yaml"},"packages:\n  - name: scaleway/scaleway-cli@v2.12.0\n  - name: scaleway/scaleway-cli\n    version: v2.4.0\n")),(0,i.yg)("p",null,"\u26a0\ufe0f Don't use the short syntax ",(0,i.yg)("inlineCode",{parentName:"p"},"<package name>@<version>")," for the old version to prevent Renovate from updating the old version."),(0,i.yg)("p",null,"\ud83d\udc4e"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-yaml"},"packages:\n  - name: scaleway/scaleway-cli@v2.12.0\n  - name: scaleway/scaleway-cli@v2.12.0\n")),(0,i.yg)("h2",{id:"whats-pkgspkgyaml-for"},"What's pkgs/**/pkg.yaml for?"),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"pkgs/**/pkg.yaml")," are test data.\n",(0,i.yg)("inlineCode",{parentName:"p"},"pkgs/**/pkg.yaml")," are used to test if packages can be installed properly."),(0,i.yg)("p",null,"Note that ",(0,i.yg)("inlineCode",{parentName:"p"},"pkgs/**/pkg.yaml")," aren't lists of available versions.\nYou can install any versions not listed in ",(0,i.yg)("inlineCode",{parentName:"p"},"pkgs/**/pkg.yaml"),"."),(0,i.yg)("h2",{id:"trouble-shooting"},"Trouble shooting"),(0,i.yg)("h3",{id:"cmdx-new-fails-to-push-a-commit-to-the-origin"},(0,i.yg)("inlineCode",{parentName:"h3"},"cmdx new")," fails to push a commit to the origin"),(0,i.yg)("admonition",{type:"info"},(0,i.yg)("p",{parentName:"admonition"},"We removed ",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx new")," from the guide.\nYou can still use ",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx new"),", but if you have any trouble with ",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx new"),", you can create a pull request without ",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx new"),".\n",(0,i.yg)("a",{parentName:"p",href:"/docs/products/aqua-registry/changelog#why-did-we-remove-cmdx-new-from-the-guide"},"Please see the changelog for details."))),(0,i.yg)("p",null,"If ",(0,i.yg)("inlineCode",{parentName:"p"},"cmdx new")," can't push a commit to a remote branch, please confirm if ",(0,i.yg)("inlineCode",{parentName:"p"},"origin")," is not the upstream ",(0,i.yg)("inlineCode",{parentName:"p"},"aquaproj/aqua-registry")," but your fork.\nIf ",(0,i.yg)("inlineCode",{parentName:"p"},"origin")," is not your fork, please change it to your fork."),(0,i.yg)("p",null,"e.g. Fail to push a commit"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-console"},"$ cmdx new pre-commit/pre-commit\n# ...\n+ git push origin feat/pre-commit/pre-commit\nremote: Permission to aquaproj/aqua-registry.git denied to ***.\nfatal: unable to access 'https://github.com/aquaproj/aqua-registry/': The requested URL returned error: 403\n")),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("a",{parentName:"li",href:"https://github.com/aquaproj/aqua-registry/fork"},"If you haven't forked aquaproj/aqua-registry, please fork it"),"."),(0,i.yg)("li",{parentName:"ol"},"Check remote repositories.")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"git remote -v\n")),(0,i.yg)("ol",{start:3},(0,i.yg)("li",{parentName:"ol"},"Please fix ",(0,i.yg)("inlineCode",{parentName:"li"},"origin"),".")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"git remote set-url origin https://github.com/<your fork>\n")),(0,i.yg)("ol",{start:4},(0,i.yg)("li",{parentName:"ol"},"Please set ",(0,i.yg)("inlineCode",{parentName:"li"},"upstream")," if necessary.")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"git remote add upstream https://github.com/aquaproj/aqua-registry\n")))}u.isMDXComponent=!0},5680:(e,a,n)=>{n.d(a,{xA:()=>c,yg:()=>d});var t=n(6540);function i(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter(function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable})),n.push.apply(n,t)}return n}function r(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach(function(a){i(e,a,n[a])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach(function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))})}return e}function s(e,a){if(null==e)return{};var n,t,i=function(e,a){if(null==e)return{};var n,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(i[n]=e[n]);return i}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=t.createContext({}),g=function(e){var a=t.useContext(l),n=a;return e&&(n="function"==typeof e?e(a):r(r({},a),e)),n},c=function(e){var a=g(e.components);return t.createElement(l.Provider,{value:a},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef(function(e,a){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=g(n),m=i,d=p["".concat(l,".").concat(m)]||p[m]||u[m]||o;return n?t.createElement(d,r(r({ref:a},c),{},{components:n})):t.createElement(d,r({ref:a},c))});function d(e,a){var n=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=m;var s={};for(var l in a)hasOwnProperty.call(a,l)&&(s[l]=a[l]);s.originalType=e,s[p]="string"==typeof e?e:i,r[1]=s;for(var g=2;g<o;g++)r[g]=n[g];return t.createElement.apply(null,r)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);