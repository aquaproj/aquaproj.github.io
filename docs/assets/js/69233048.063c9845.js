"use strict";(self.webpackChunkaqua_docusaurus=self.webpackChunkaqua_docusaurus||[]).push([[2928],{5680:(e,t,n)=>{n.d(t,{xA:()=>g,yg:()=>m});var a=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},g=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,g=s(e,["components","mdxType","originalType","parentName"]),u=p(n),c=r,m=u["".concat(l,".").concat(c)]||u[c]||d[c]||o;return n?a.createElement(m,i(i({ref:t},g),{},{components:n})):a.createElement(m,i({ref:t},g))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},7236:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=n(8168),r=(n(6540),n(5680));const o={sidebar_position:445},i="Registry Style Guide",s={unversionedId:"develop-registry/registry-style-guide",id:"develop-registry/registry-style-guide",title:"Registry Style Guide",description:"If you develop your custom registry, you don't have to conform to this style guide.",source:"@site/docs/develop-registry/registry-style-guide.md",sourceDirName:"develop-registry",slug:"/develop-registry/registry-style-guide",permalink:"/docs/develop-registry/registry-style-guide",draft:!1,editUrl:"https://github.com/aquaproj/aquaproj.github.io/edit/main/docs/develop-registry/registry-style-guide.md",tags:[],version:"current",sidebarPosition:445,frontMatter:{sidebar_position:445},sidebar:"tutorialSidebar",previous:{title:"Develop a Registry",permalink:"/docs/develop-registry/"},next:{title:"Change GOOS and GOARCH for testing Registry",permalink:"/docs/develop-registry/change-os-arch-for-test"}},l={},p=[{value:"Format with prettier",id:"format-with-prettier",level:2},{value:"Remove spaces in the template <code>{{ </code> and <code> }}</code>",id:"remove-spaces-in-the-template---and--",level:2},{value:"Remove characters <code>.!</code> from the end of the description",id:"remove-characters--from-the-end-of-the-description",level:2},{value:"Trim spaces",id:"trim-spaces",level:2},{value:"Remove unneeded quotes of strings",id:"remove-unneeded-quotes-of-strings",level:2},{value:"Avoid <code>if</code> and <code>for</code> statement in templates",id:"avoid-if-and-for-statement-in-templates",level:2},{value:"<code>version_overrides</code> Style Guide",id:"version_overrides-style-guide",level:2},{value:"If the <code>format</code> is <code>raw</code>, <code>files[].src</code> isn&#39;t needed",id:"if-the-format-is-raw-filessrc-isnt-needed",level:2},{value:"Consideration about Rust",id:"consideration-about-rust",level:2},{value:"Use <code>overrides</code> instead of <code>format_overrides</code>",id:"use-overrides-instead-of-format_overrides",level:2},{value:"Don&#39;t use emojis as much as possible",id:"dont-use-emojis-as-much-as-possible",level:2},{value:"Omit the setting which is equivalent to the default value",id:"omit-the-setting-which-is-equivalent-to-the-default-value",level:2},{value:"Use <code>aliases</code> only for keeping the compatibility",id:"use-aliases-only-for-keeping-the-compatibility",level:2},{value:"Use <code>supported_envs</code> rather than <code>supported_if</code>",id:"use-supported_envs-rather-than-supported_if",level:2},{value:"Select <code>type</code> according to the following order",id:"select-type-according-to-the-following-order",level:2},{value:"<code>cargo</code> package name should be <code>crates.io/&lt;crate name&gt;</code>",id:"cargo-package-name-should-be-cratesiocrate-name",level:2}],g={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.yg)(u,(0,a.A)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"registry-style-guide"},"Registry Style Guide"),(0,r.yg)("admonition",{type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"If you develop your custom registry, you don't have to conform to this style guide.\nBut the guide would be useful to write good and consistent configuration.")),(0,r.yg)("h2",{id:"format-with-prettier"},"Format with prettier"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://prettier.io/"},"https://prettier.io/")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-console"},"$ npm i -g prettier\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-console"},"$ prettier -w registry.yaml\n")),(0,r.yg)("h2",{id:"remove-spaces-in-the-template---and--"},"Remove spaces in the template ",(0,r.yg)("inlineCode",{parentName:"h2"},"{{ ")," and ",(0,r.yg)("inlineCode",{parentName:"h2"}," }}")),(0,r.yg)("p",null,"\ud83d\udc4d"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"asset: tfcmt_{{.OS}}_{{.Arch}}.tar.gz\n")),(0,r.yg)("p",null,"\ud83d\udc4e"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"asset: tfcmt_{{ .OS }}_{{ .Arch }}.tar.gz\n")),(0,r.yg)("h2",{id:"remove-characters--from-the-end-of-the-description"},"Remove characters ",(0,r.yg)("inlineCode",{parentName:"h2"},".!")," from the end of the description"),(0,r.yg)("p",null,"\ud83d\udc4d"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"description: A command-line tool that makes git easier to use with GitHub\n")),(0,r.yg)("p",null,"\ud83d\udc4e"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"description: A command-line tool that makes git easier to use with GitHub.\n")),(0,r.yg)("h2",{id:"trim-spaces"},"Trim spaces"),(0,r.yg)("p",null,"\ud83d\udc4d"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"description: A command-line tool that makes git easier to use with GitHub\n")),(0,r.yg)("p",null,"\ud83d\udc4e"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},'description: "  A command-line tool that makes git easier to use with GitHub  "\n')),(0,r.yg)("h2",{id:"remove-unneeded-quotes-of-strings"},"Remove unneeded quotes of strings"),(0,r.yg)("p",null,"\ud83d\udc4d"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"description: A command-line tool that makes git easier to use with GitHub\n")),(0,r.yg)("p",null,"\ud83d\udc4e"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},'description: "A command-line tool that makes git easier to use with GitHub"\n')),(0,r.yg)("h2",{id:"avoid-if-and-for-statement-in-templates"},"Avoid ",(0,r.yg)("inlineCode",{parentName:"h2"},"if")," and ",(0,r.yg)("inlineCode",{parentName:"h2"},"for")," statement in templates"),(0,r.yg)("p",null,"\ud83d\udc4d"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"asset: foo.{{.Format}}\nformat: tar.gz\noverrides:\n  - goos: windows\n    format: zip\n")),(0,r.yg)("p",null,"\ud83d\udc4e"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"asset: 'foo.{{if eq .GOOS \"windows\"}}zip{{else}}tar.gz{{end}}'\n")),(0,r.yg)("h2",{id:"version_overrides-style-guide"},(0,r.yg)("inlineCode",{parentName:"h2"},"version_overrides")," Style Guide"),(0,r.yg)("p",null,"We decided not to rely on base settings as much as possible.\nThis means we don't define settings such as ",(0,r.yg)("inlineCode",{parentName:"p"},"asset"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"format"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"windows_arm_emulation"),", and so on on the base settings.\nMerge with base settings makes code DRY, but it's difficult to update settings when settings of new versions are changed because the update of the base settings affects all version override.\nBy stopping to merge settings, we can update settings by simply adding a new version override and updating the last version_constraint.\nPerhaps we would be able to automate the update in future too."),(0,r.yg)("p",null,"e.g."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},'# Define only settings which don\'t depend on versions.\n# e.g. repo_owner, repo_name, description.\nversion_constraint: "false"\nversion_overrides:\n  - version_constraint: semver("<= 3.0.0")\n    # Oldest setting\n    # ...\n  - version_constraint: semver("<= 4.0.0")\n    # ...\n  - version_constraint: semver("<= 5.0.0")\n    # ...\n  - version_constraint: "true"\n    # Latest setting\n    # ...\n')),(0,r.yg)("h2",{id:"if-the-format-is-raw-filessrc-isnt-needed"},"If the ",(0,r.yg)("inlineCode",{parentName:"h2"},"format")," is ",(0,r.yg)("inlineCode",{parentName:"h2"},"raw"),", ",(0,r.yg)("inlineCode",{parentName:"h2"},"files[].src")," isn't needed"),(0,r.yg)("p",null,"\ud83d\udc4d"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"format: raw\nfiles:\n  - name: swagger\n")),(0,r.yg)("p",null,"\ud83d\udc4e"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"format: raw\nfiles:\n  - name: swagger\n    src: swagger_{{.OS}}_{{.Arch}} # unneeded\n")),(0,r.yg)("h2",{id:"consideration-about-rust"},"Consideration about Rust"),(0,r.yg)("p",null,"\u26a0\ufe0f The author ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/suzuki-shunsuke"},"@suzuki-shunsuke")," isn't familiar with Rust. If you have any opinion, please let us know."),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"linux: use the asset for not ",(0,r.yg)("inlineCode",{parentName:"li"},"gnu")," but ",(0,r.yg)("inlineCode",{parentName:"li"},"musl")," if both of them are supported",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"ref: ",(0,r.yg)("a",{parentName:"li",href:"https://github.com/aquaproj/aqua-registry/pull/2153#discussion_r805116879"},"https://github.com/aquaproj/aqua-registry/pull/2153#discussion_r805116879")))),(0,r.yg)("li",{parentName:"ul"},"windows: use the asset for not ",(0,r.yg)("inlineCode",{parentName:"li"},"gnu")," but ",(0,r.yg)("inlineCode",{parentName:"li"},"msvc")," if both of them are supported",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"ref: ",(0,r.yg)("a",{parentName:"li",href:"https://rust-lang.github.io/rustup/installation/windows.html"},"https://rust-lang.github.io/rustup/installation/windows.html"))))),(0,r.yg)("p",null,"\ud83d\udc4d"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"replacements:\n  linux: unknown-linux-musl\n  windows: pc-windows-msvc\n")),(0,r.yg)("p",null,"\ud83d\udc4e"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"replacements:\n  linux: unknown-linux-gnu\n  windows: pc-windows-gnu\n")),(0,r.yg)("h2",{id:"use-overrides-instead-of-format_overrides"},"Use ",(0,r.yg)("inlineCode",{parentName:"h2"},"overrides")," instead of ",(0,r.yg)("inlineCode",{parentName:"h2"},"format_overrides")),(0,r.yg)("p",null,"\ud83d\udc4d"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"format: tar.gz\noverrides:\n  - goos: windows\n    format: zip\n")),(0,r.yg)("p",null,"\ud83d\udc4e"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"format: tar.gz\nformat_overrides:\n  - goos: windows\n    format: zip\n")),(0,r.yg)("h2",{id:"dont-use-emojis-as-much-as-possible"},"Don't use emojis as much as possible"),(0,r.yg)("p",null,"In some environments, emojis are corrupted. e.g. ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua/pull/1004#issuecomment-1183710603"},"https://github.com/aquaproj/aqua/pull/1004#issuecomment-1183710603")),(0,r.yg)("p",null,"\ud83d\udc4d"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"description: CLI and Go library for CODEOWNERS files\n")),(0,r.yg)("p",null,"\ud83d\udc4e"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"description: \ud83d\udd12 CLI and Go library for CODEOWNERS files\n")),(0,r.yg)("h2",{id:"omit-the-setting-which-is-equivalent-to-the-default-value"},"Omit the setting which is equivalent to the default value"),(0,r.yg)("p",null,"When ",(0,r.yg)("inlineCode",{parentName:"p"},"repo_owner")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"repo_name")," are set, you can omit some attributes."),(0,r.yg)("p",null,"\ud83d\udc4d"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"repo_owner: weaveworks\nrepo_name: eksctl\n")),(0,r.yg)("p",null,"\ud83d\udc4e"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"repo_owner: weaveworks\nrepo_name: eksctl\nname: weaveworks/eksctl\nlink: https://github.com/weaveworks/eksctl\nfiles:\n  - name: eksctl\n")),(0,r.yg)("h2",{id:"use-aliases-only-for-keeping-the-compatibility"},"Use ",(0,r.yg)("inlineCode",{parentName:"h2"},"aliases")," only for keeping the compatibility"),(0,r.yg)("p",null,"Please see ",(0,r.yg)("a",{parentName:"p",href:"/docs/reference/registry-config/aliases#use-aliases-only-for-keeping-the-compatibility"},"here")),(0,r.yg)("h2",{id:"use-supported_envs-rather-than-supported_if"},"Use ",(0,r.yg)("inlineCode",{parentName:"h2"},"supported_envs")," rather than ",(0,r.yg)("inlineCode",{parentName:"h2"},"supported_if")),(0,r.yg)("p",null,"Please see ",(0,r.yg)("a",{parentName:"p",href:"/docs/reference/registry-config/supported-if"},"the caution"),"."),(0,r.yg)("h2",{id:"select-type-according-to-the-following-order"},"Select ",(0,r.yg)("inlineCode",{parentName:"h2"},"type")," according to the following order"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"github_release"),(0,r.yg)("li",{parentName:"ol"},"github_content"),(0,r.yg)("li",{parentName:"ol"},"github_archive"),(0,r.yg)("li",{parentName:"ol"},"http"),(0,r.yg)("li",{parentName:"ol"},"go_install"),(0,r.yg)("li",{parentName:"ol"},"go_build")),(0,r.yg)("p",null,"For example, you can also use ",(0,r.yg)("inlineCode",{parentName:"p"},"http")," type to install the package from GitHub Releases, but in that case you should use ",(0,r.yg)("inlineCode",{parentName:"p"},"github_release")," rather than ",(0,r.yg)("inlineCode",{parentName:"p"},"http"),"."),(0,r.yg)("h2",{id:"cargo-package-name-should-be-cratesiocrate-name"},(0,r.yg)("inlineCode",{parentName:"h2"},"cargo")," package name should be ",(0,r.yg)("inlineCode",{parentName:"h2"},"crates.io/<crate name>")),(0,r.yg)("p",null,"Please see ",(0,r.yg)("a",{parentName:"p",href:"/docs/reference/registry-config/cargo-package#-package-name"},"here"),"."))}d.isMDXComponent=!0}}]);