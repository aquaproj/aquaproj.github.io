"use strict";(self.webpackChunkaqua_docusaurus=self.webpackChunkaqua_docusaurus||[]).push([[8682],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>f});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function p(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=n.createContext({}),l=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):p(p({},r),e)),t},u=function(e){var r=l(e.components);return n.createElement(i.Provider,{value:r},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=l(t),m=o,f=c["".concat(i,".").concat(m)]||c[m]||d[m]||a;return t?n.createElement(f,p(p({ref:r},u),{},{components:t})):n.createElement(f,p({ref:r},u))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,p=new Array(a);p[0]=m;var s={};for(var i in r)hasOwnProperty.call(r,i)&&(s[i]=r[i]);s.originalType=e,s[c]="string"==typeof e?e:o,p[1]=s;for(var l=2;l<a;l++)p[l]=t[l];return n.createElement.apply(null,p)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2234:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>p,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=t(7462),o=(t(7294),t(3905));const a={sidebar_position:1950},p="supported_envs",s={unversionedId:"reference/registry-config/supported-envs",id:"reference/registry-config/supported-envs",title:"supported_envs",description:"#882 #884",source:"@site/docs/reference/registry-config/supported-envs.md",sourceDirName:"reference/registry-config",slug:"/reference/registry-config/supported-envs",permalink:"/docs/reference/registry-config/supported-envs",draft:!1,editUrl:"https://github.com/aquaproj/aquaproj.github.io/edit/main/docs/reference/registry-config/supported-envs.md",tags:[],version:"current",sidebarPosition:1950,frontMatter:{sidebar_position:1950},sidebar:"tutorialSidebar",previous:{title:"checksum",permalink:"/docs/reference/registry-config/checksum"},next:{title:"complete_windows_ext",permalink:"/docs/reference/registry-config/complete-windows-ext"}},i={},l=[{value:"Example Code",id:"example-code",level:2}],u={toc:l},c="wrapper";function d(e){let{components:r,...t}=e;return(0,o.kt)(c,(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"supported_envs"},"supported_envs"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua/issues/882"},"#882")," ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua/pull/884"},"#884")),(0,o.kt)("p",null,"aqua >= v1.12.0"),(0,o.kt)("p",null,"You can specify the list of supported environments (GOOS and GOARCH) in ",(0,o.kt)("inlineCode",{parentName:"p"},"supported_envs"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"supported_envs")," has been introduced to solve the following ",(0,o.kt)("inlineCode",{parentName:"p"},"supported_if")," problems."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Complicated. There are multiple ways to express the same environments. The expression is too flexible "),(0,o.kt)("li",{parentName:"ol"},"Performance. aqua has to compile and evaluate the expression per tool. It may affect the performance although we should do the performance test")),(0,o.kt)("h2",{id:"example-code"},"Example Code"),(0,o.kt)("p",null,"AS IS"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'packages:\n  - type: github_release\n    repo_owner: gruntwork-io\n    repo_name: terragrunt\n    asset: terragrunt_{{.OS}}_{{.Arch}}\n    supported_if: not (GOOS == "windows" and GOARCH == "arm64")\n')),(0,o.kt)("p",null,"TO BE"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"packages:\n  - type: github_release\n    repo_owner: gruntwork-io\n    repo_name: terragrunt\n    asset: terragrunt_{{.OS}}_{{.Arch}}\n    supported_envs:\n      - windows/amd64\n      - darwin\n      - linux\n")),(0,o.kt)("p",null,"The following patterns are supported."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"<GOOS>")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"<GOOS>/<GOARCH>"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"supported_envs: [] # no environment is supported\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'supported_envs: ["all"] # all environments are supported\n')))}d.isMDXComponent=!0}}]);