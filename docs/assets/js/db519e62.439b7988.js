"use strict";(self.webpackChunkaqua_docusaurus=self.webpackChunkaqua_docusaurus||[]).push([[4832],{3905:(e,a,t)=>{t.d(a,{Zo:()=>c,kt:()=>d});var r=t(7294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var o=r.createContext({}),u=function(e){var a=r.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},c=function(e){var a=u(e.components);return r.createElement(o.Provider,{value:a},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},f=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(t),f=n,d=p["".concat(o,".").concat(f)]||p[f]||g[f]||i;return t?r.createElement(d,s(s({ref:a},c),{},{components:t})):r.createElement(d,s({ref:a},c))}));function d(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var i=t.length,s=new Array(i);s[0]=f;var l={};for(var o in a)hasOwnProperty.call(a,o)&&(l[o]=a[o]);l.originalType=e,l[p]="string"==typeof e?e:n,s[1]=l;for(var u=2;u<i;u++)s[u]=t[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},1354:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>o,contentTitle:()=>s,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=t(7462),n=(t(7294),t(3905));const i={sidebar_position:1150},s="Cosign and SLSA Provenance Support",l={unversionedId:"reference/security/cosign-slsa",id:"reference/security/cosign-slsa",title:"Cosign and SLSA Provenance Support",description:"- aqua >= v1.26.0",source:"@site/docs/reference/security/cosign-slsa.md",sourceDirName:"reference/security",slug:"/reference/security/cosign-slsa",permalink:"/docs/reference/security/cosign-slsa",draft:!1,editUrl:"https://github.com/aquaproj/aquaproj.github.io/edit/main/docs/reference/security/cosign-slsa.md",tags:[],version:"current",sidebarPosition:1150,frontMatter:{sidebar_position:1150},sidebar:"tutorialSidebar",previous:{title:"Why is Policy needed?",permalink:"/docs/reference/security/policy-as-code/why-policy-is-needed"},next:{title:"AQUA_X_SYS_EXEC",permalink:"/docs/reference/execve-2"}},o={},u=[{value:"Getting Started",id:"getting-started",level:2},{value:"Verify aqua-installer with checksum",id:"verify-aqua-installer-with-checksum",level:2},{value:"Verify aqua",id:"verify-aqua",level:2},{value:"Verify packages",id:"verify-packages",level:2},{value:"Verify packages with Cosign",id:"verify-packages-with-cosign",level:3},{value:"Verify packages with slsa-verifier",id:"verify-packages-with-slsa-verifier",level:3},{value:"See also",id:"see-also",level:2}],c={toc:u},p="wrapper";function g(e){let{components:a,...t}=e;return(0,n.kt)(p,(0,r.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"cosign-and-slsa-provenance-support"},"Cosign and SLSA Provenance Support"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"aqua >= v1.26.0")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"aqua-installer >= v2.0.0"))),(0,n.kt)("p",null,"Japanese: ",(0,n.kt)("a",{parentName:"p",href:"https://zenn.dev/shunsuke_suzuki/articles/aqua-cosign-slsa"},"Cosign \u3068 SLSA \u306b\u3088\u308b aqua CLI Version Manager \u306e Security \u6539\u5584")),(0,n.kt)("p",null,"aqua supports verifying aqua and packages with ",(0,n.kt)("a",{parentName:"p",href:"https://docs.sigstore.dev/cosign/overview/"},"Cosign")," and ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/slsa-framework/slsa-verifier"},"slsa-verifier"),"."),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"You don't have to install Cosign and slsa-verifier, because aqua installs Cosign automatically and slsa-verifier is embedded to aqua as Go library.")),(0,n.kt)("h2",{id:"getting-started"},"Getting Started"),(0,n.kt)("p",null,"First, let's create a container to try this tutorial in clean environment."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"docker run --rm -ti alpine:3.17.0 sh\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'apk add curl bash sudo\nadduser -u 1000 -G wheel -D foo\nvisudo # Uncomment "%wheel ALL=(ALL) NOPASSWD: ALL"\nsu foo\nmkdir ~/workspace\ncd ~/workspace\nexport PATH="${AQUA_ROOT_DIR:-${XDG_DATA_HOME:-$HOME/.local/share}/aquaproj-aqua}/bin:$PATH"\n')),(0,n.kt)("h2",{id:"verify-aqua-installer-with-checksum"},"Verify aqua-installer with checksum"),(0,n.kt)("p",null,"You can install aqua by the following one liner."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"curl -sSfL https://raw.githubusercontent.com/aquaproj/aqua-installer/v2.1.1/aqua-installer | bash\n")),(0,n.kt)("p",null,"But the one liner is a bit dangerous because aqua-installer may be tampered."),(0,n.kt)("p",null,"You can verify aqua-installer with checksum."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},'curl -sSfL -O https://raw.githubusercontent.com/aquaproj/aqua-installer/v2.1.1/aqua-installer\necho "c2af02bdd15da6794f9c98db40332c804224930212f553a805425441f8331665  aqua-installer" | sha256sum -c\nchmod +x aqua-installer\n')),(0,n.kt)("p",null,"You have to update the checksum everytime aqua-installer is updated, but aqua-installer isn't updated so frequently."),(0,n.kt)("h2",{id:"verify-aqua"},"Verify aqua"),(0,n.kt)("p",null,"Let's install aqua with aqua-installer. aqua-installer verifies aqua with slsa-verifier."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"./aqua-installer\n")),(0,n.kt)("p",null,"Please see the log. You can confirm aqua is verified with slsa-verifier."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"INFO[0001] verify a package with slsa-verifier           aqua_version=1.26.2 env=linux/arm64 new_version=v1.26.2 package_name=aquaproj/aqua package_version=v1.26.2 program=aqua registry=\nVerified signature against tlog entry index 9918167 at URL: https://rekor.sigstore.dev/api/v1/log/entries/24296fb24b8ad77a4f5de5310f955deac79a5e8f16363b66a038bc6436fd330668a2933d69c75228\nVerified build using builder https://github.com/slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@refs/tags/v1.4.0 at commit d37dec79a9b96c85592eb24d69f9972cbd176f9a\n")),(0,n.kt)("p",null,"If aqua is tampered the installation would fail."),(0,n.kt)("h2",{id:"verify-packages"},"Verify packages"),(0,n.kt)("p",null,"aqua supports verifying packages with Cosign and slsa-verifier, but it requires the following things."),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"A tool publishes signature or SLSA Provenance"),(0,n.kt)("li",{parentName:"ol"},"A package has settings for Cosign or SLSA Provenance")),(0,n.kt)("p",null,"At the moment, there are very few tools publishing signature or SLSA Provenance, but we hope many tools publishes them in future."),(0,n.kt)("h3",{id:"verify-packages-with-cosign"},"Verify packages with Cosign"),(0,n.kt)("p",null,"For example, ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/terraform-linters/tflint"},"tflint")," publishes signature in ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/terraform-linters/tflint/releases"},"GitHub Releases"),"."),(0,n.kt)("p",null,"And standard registry has a setting of cosign for tflint."),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua-registry/blob/726e274fade1a6fc71cde029f858893131b38078/pkgs/terraform-linters/tflint/registry.yaml#L11-L25"},"registry.yaml")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},'    checksum:\n      type: github_release\n      asset: checksums.txt\n      file_format: regexp\n      algorithm: sha256\n      pattern:\n        checksum: ^(\\b[A-Fa-f0-9]{64}\\b)\n        file: "^\\\\b[A-Fa-f0-9]{64}\\\\b\\\\s+(\\\\S+)$"\n      cosign:\n        cosign_experimental: true\n        opts:\n          - --signature\n          - https://github.com/terraform-linters/tflint/releases/download/{{.Version}}/checksums.txt.keyless.sig\n          - --certificate\n          - https://github.com/terraform-linters/tflint/releases/download/{{.Version}}/checksums.txt.pem\n')),(0,n.kt)("p",null,"Let's install tflint. To verify checksum's signature, you have to enable ",(0,n.kt)("a",{parentName:"p",href:"/docs/guides/checksum"},"Checksum Verification"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"aqua init\nvi aqua.yaml # Enable checksum verification\naqua g -i terraform-linters/tflint\naqua i\n")),(0,n.kt)("p",null,"Please see the log. You can confirm Cosign is installed automatically."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"INFO[0000] download and unarchive the package            aqua_version=1.26.2 env=linux/arm64 package_name=sigstore/cosign package_version=v1.13.1 program=aqua registry=\nINFO[0008] downloading a checksum file                   aqua_version=1.26.2 env=linux/arm64 package_name=sigstore/cosign package_version=v1.13.1 program=aqua registry=\n")),(0,n.kt)("p",null,"And tflint is verified with Cosign."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"INFO[0002] verify a checksum file with Cosign            aqua_version=1.26.2 env=linux/arm64 package_name=terraform-linters/tflint package_version=v0.44.0 program=aqua registry=standard\ntlog entry verified with uuid: fab3e75f7e01ac757d8ddab411a7fd0c8b35c4ea2d0cb31c4c5bfdbe7ac5cf42 index: 9877371\nVerified OK\n")),(0,n.kt)("h3",{id:"verify-packages-with-slsa-verifier"},"Verify packages with slsa-verifier"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/aquaproj/example-go-slsa-provenance"},"aquaproj/example-go-slsa-provenance")," publishes SLSA Provenance,\nso let's install it."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"aqua g -i aquaproj/example-go-slsa-provenance\naqua i\n")),(0,n.kt)("p",null,"Please see the log. You can confirm the package is verified with slsa-verifier."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"INFO[0000] verify a package with slsa-verifier           aqua_version=1.26.2 env=linux/arm64 package_name=aquaproj/example-go-slsa-provenance package_version=v0.1.2 program=aqua registry=standard\nVerified signature against tlog entry index 9476343 at URL: https://rekor.sigstore.dev/api/v1/log/entries/24296fb24b8ad77a92eb2665ca9575614bc6b0833267eca755ca5d2e8d5a563c2b70c310dad3c0f6\nVerified build using builder https://github.com/slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@refs/tags/v1.4.0 at commit 4581df55e03c5155801ad10b88b19e42f99d8861\n")),(0,n.kt)("p",null,"If the package is tampered, the installation would fail.\nLet's try to install example-go-slsa-provenance v0.1.1, which was tamperred intentionally for the demonstration."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"vi aqua.yaml # Change the version to v0.1.1\naqua i\n")),(0,n.kt)("p",null,"Then the installation would fail expectedly."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"INFO[0002] verify a package with slsa-verifier           aqua_version=1.26.2 env=linux/arm64 package_name=aquaproj/example-go-slsa-provenance package_version=v0.1.1 program=aqua registry=standard\nVerified signature against tlog entry index 9476343 at URL: https://rekor.sigstore.dev/api/v1/log/entries/24296fb24b8ad77a92eb2665ca9575614bc6b0833267eca755ca5d2e8d5a563c2b70c310dad3c0f6\nERRO[0004] install the package                           aqua_version=1.26.2 env=linux/arm64 error=\"verify a package with slsa-verifier: run slsa-verifier's verify-artifact command: expected tag 'refs/tags/v0.1.1', got 'refs/tags/v0.1.2': tag used to generate the binary does not match provenance\" package_name=aquaproj/example-go-slsa-provenance package_version=v0.1.1 program=aqua registry=standard\nFATA[0004] aqua failed                                   aqua_version=1.26.2 env=linux/arm64 error=\"it failed to install some packages\" program=aqua\n")),(0,n.kt)("h2",{id:"see-also"},"See also"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Registry Configuration",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/reference/registry-config/cosign"},"cosign")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/reference/registry-config/slsa-provenance"},"slsa_provenance"))))))}g.isMDXComponent=!0}}]);