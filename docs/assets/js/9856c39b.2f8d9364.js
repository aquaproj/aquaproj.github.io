"use strict";(self.webpackChunkaqua_docusaurus=self.webpackChunkaqua_docusaurus||[]).push([[6422],{5680:(e,t,r)=>{r.d(t,{xA:()=>u,yg:()=>d});var n=r(6540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=l(r),y=a,d=c["".concat(p,".").concat(y)]||c[y]||g[y]||o;return r?n.createElement(d,i(i({ref:t},u),{},{components:r})):n.createElement(d,i({ref:t},u))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=y;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[c]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},8217:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(8168),a=(r(6540),r(5680));const o={sidebar_position:850},i="Change GOOS and GOARCH for testing Registry",s={unversionedId:"develop-registry/change-os-arch-for-test",id:"develop-registry/change-os-arch-for-test",title:"Change GOOS and GOARCH for testing Registry",description:"#643 #644",source:"@site/docs/develop-registry/change-os-arch-for-test.md",sourceDirName:"develop-registry",slug:"/develop-registry/change-os-arch-for-test",permalink:"/docs/develop-registry/change-os-arch-for-test",draft:!1,editUrl:"https://github.com/aquaproj/aquaproj.github.io/edit/main/docs/develop-registry/change-os-arch-for-test.md",tags:[],version:"current",sidebarPosition:850,frontMatter:{sidebar_position:850},sidebar:"tutorialSidebar",previous:{title:"Registry Style Guide",permalink:"/docs/develop-registry/registry-style-guide"},next:{title:"Products",permalink:"/docs/products/"}},p={},l=[],u={toc:l},c="wrapper";function g(e){let{components:t,...r}=e;return(0,a.yg)(c,(0,n.A)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"change-goos-and-goarch-for-testing-registry"},"Change ",(0,a.yg)("inlineCode",{parentName:"h1"},"GOOS")," and ",(0,a.yg)("inlineCode",{parentName:"h1"},"GOARCH")," for testing Registry"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua/issues/643"},"#643")," ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua/issues/644"},"#644")),(0,a.yg)("p",null,"aqua >= v1.4.0 is required."),(0,a.yg)("p",null,"When you develop aqua Registry such as ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua-registry"},"Standard Registry"),", you have to consider mainly the following platforms."),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"windows / amd64"),(0,a.yg)("li",{parentName:"ul"},"windows / arm64"),(0,a.yg)("li",{parentName:"ul"},"darwin / amd64"),(0,a.yg)("li",{parentName:"ul"},"darwin / arm64"),(0,a.yg)("li",{parentName:"ul"},"linux / amd64"),(0,a.yg)("li",{parentName:"ul"},"linux / arm64")),(0,a.yg)("p",null,"But if you don't have laptops for the above platforms, it is difficult to test the Registry on the platforms."),(0,a.yg)("p",null,"Furthermore, ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua-registry"},"Standard Registry")," is tested with GitHub Actions but GitHub Actions doesn't support arm64, so we can't test the Registry on arm64."),(0,a.yg)("p",null,"To solve the problem, aqua supports changing ",(0,a.yg)("inlineCode",{parentName:"p"},"GOOS")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"GOARCH")," for testing the Registry."),(0,a.yg)("p",null,"By default, aqua gets ",(0,a.yg)("inlineCode",{parentName:"p"},"GOOS")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"GOARCH")," from Go's ",(0,a.yg)("a",{parentName:"p",href:"https://pkg.go.dev/runtime#pkg-constants"},"runtime.GOOS and runtime.GOARCH"),", but you can override them with the environment variables ",(0,a.yg)("inlineCode",{parentName:"p"},"AQUA_GOOS")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"AQUA_GOARCH"),"."),(0,a.yg)("p",null,"e.g."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-console"},"$ AQUA_GOOS=darwin AQUA_GOARCH=arm64 aqua i --test\n$ AQUA_GOOS=darwin AQUA_GOARCH=arm64 aqua which gh\n")),(0,a.yg)("p",null,"Of course, even if you change ",(0,a.yg)("inlineCode",{parentName:"p"},"GOOS")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"GOARCH")," you wouldn't be able to execute the tools.\nBut by running ",(0,a.yg)("inlineCode",{parentName:"p"},"aqua i --test"),", you can test if tools can be installed properly."))}g.isMDXComponent=!0}}]);