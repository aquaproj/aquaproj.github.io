"use strict";(self.webpackChunkaqua_docusaurus=self.webpackChunkaqua_docusaurus||[]).push([[8834],{5680:(e,a,n)=>{n.d(a,{xA:()=>p,yg:()=>y});var t=n(6540);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=t.createContext({}),u=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},p=function(e){var a=u(e.components);return t.createElement(s.Provider,{value:a},e.children)},g="mdxType",c={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},d=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),g=u(n),d=r,y=g["".concat(s,".").concat(d)]||g[d]||c[d]||o;return n?t.createElement(y,i(i({ref:a},p),{},{components:n})):t.createElement(y,i({ref:a},p))}));function y(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l[g]="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5400:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var t=n(8168),r=(n(6540),n(5680));const o={title:"aqua - Declarative CLI Version Manager",date:new Date("2021-09-08T00:32:46.000Z"),authors:["suzuki-shunsuke"]},i=void 0,l={permalink:"/blog/2021/09/08/introduction",source:"@site/blog/2021-09-08-introduction.md",title:"aqua - Declarative CLI Version Manager",description:"Original Post//dev.to/suzukishunsuke/aqua-declarative-cli-version-manager-1ibe",date:"2021-09-08T00:32:46.000Z",formattedDate:"September 8, 2021",tags:[],readingTime:5.155,hasTruncateMarker:!1,authors:[{name:"Shunsuke Suzuki",title:"SRE / OSS Contributor / Tool Maker / Go / Terraform",url:"https://github.com/suzuki-shunsuke",imageURL:"https://github.com/suzuki-shunsuke.png",key:"suzuki-shunsuke"}],frontMatter:{title:"aqua - Declarative CLI Version Manager",date:"2021-09-08T00:32:46.000Z",authors:["suzuki-shunsuke"]},prevItem:{title:"Manage CLI tool version with aqua",permalink:"/blog/2021/12/04/aqua-overview"}},s={authorsImageUrls:[void 0]},u=[{value:"Registry",id:"registry",level:2},{value:"Cotinuous update by Renovate",id:"cotinuous-update-by-renovate",level:2},{value:"Summary",id:"summary",level:2}],p={toc:u},g="wrapper";function c(e){let{components:a,...n}=e;return(0,r.yg)(g,(0,t.A)({},p,n,{components:a,mdxType:"MDXLayout"}),(0,r.yg)("head",null,(0,r.yg)("link",{rel:"canonical",href:"https://dev.to/suzukishunsuke/aqua-declarative-cli-version-manager-1ibe"})),(0,r.yg)("p",null,"Original Post: ",(0,r.yg)("a",{parentName:"p",href:"https://dev.to/suzukishunsuke/aqua-declarative-cli-version-manager-1ibe"},"https://dev.to/suzukishunsuke/aqua-declarative-cli-version-manager-1ibe")),(0,r.yg)("p",null,"In this post, I introduce ",(0,r.yg)("a",{parentName:"p",href:"https://aquaproj.github.io"},"aqua"),", which is a declarative CLI Version Manager.\nYou can install CLI tools and manage their versions with YAML declaratively.\nMainly the following use cases are assumed."),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Install tools in CI/CD"),(0,r.yg)("li",{parentName:"ul"},"Install tools for repository's local development"),(0,r.yg)("li",{parentName:"ul"},"Install tools in your laptop")),(0,r.yg)("p",null,"aqua supports the ",(0,r.yg)("inlineCode",{parentName:"p"},"Lazy Install")," and Sharable Configuration mechanism named ",(0,r.yg)("inlineCode",{parentName:"p"},"Registry"),".\nCompared to other package manager like ",(0,r.yg)("inlineCode",{parentName:"p"},"Homebrew"),", aqua supports switching tool versions per ",(0,r.yg)("inlineCode",{parentName:"p"},"aqua.yaml"),".\nOf course, you can use aqua with other package managers too."),(0,r.yg)("p",null,"You can install aqua with ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua-installer"},"aqua-installer"),"."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-console"},"$ curl -sSfL \\\n  https://raw.githubusercontent.com/aquaproj/aqua-installer/v1.0.0/aqua-installer |\n  bash -s -- -i ~/bin/aqua -v v1.9.0\n")),(0,r.yg)("p",null,"You can install aqua with Homebrew too."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-console"},"$ brew install aquparoj/aqua/aqua\n")),(0,r.yg)("p",null,"For example, let's install jq with aqua. Write the following ",(0,r.yg)("inlineCode",{parentName:"p"},"aqua.yaml"),"."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"registries:\n- type: standard\n  ref: v2.19.0 # renovate: depName=aquaproj/aqua-registry\npackages:\n- name: stedolan/jq\n  version: jq-1.5\n")),(0,r.yg)("p",null,"And run ",(0,r.yg)("inlineCode",{parentName:"p"},"aqua i -l"),"."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-console"},"$ aqua i -l\n")),(0,r.yg)("p",null,"The option ",(0,r.yg)("inlineCode",{parentName:"p"},"-l")," is important. By this option, the symbolic links are created in ",(0,r.yg)("inlineCode",{parentName:"p"},"~/.aqua/bin")," but the downloading tools is skipped.\nThis is the feature named ",(0,r.yg)("inlineCode",{parentName:"p"},"Lazy Install"),"."),(0,r.yg)("p",null,"Tools are installed in ",(0,r.yg)("inlineCode",{parentName:"p"},"~/.local/share/aquaproj-aqua"),". Let's add ",(0,r.yg)("inlineCode",{parentName:"p"},"~/.local/share/aquaproj-aqua/bin")," to the environment variable ",(0,r.yg)("inlineCode",{parentName:"p"},"PATH"),"."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-console"},"$ export PATH=$HOME/.local/share/aquaproj-aqua/bin:$PATH\n")),(0,r.yg)("p",null,"Let's check if jq installed correctly."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-console"},"$ jq --version\nINFO[0000] download and unarchive the package            package_name=jq package_version=jq-1.5 program=aqua registry=standard\njq-1.5\n")),(0,r.yg)("p",null,"The output ",(0,r.yg)("inlineCode",{parentName:"p"},"INFO[0000] download and unarchive the package            package_name=jq package_version=jq-1.5 program=aqua registry=standard")," indicates that jq is installed automatically before jq is executed."),(0,r.yg)("p",null,"aqua searches the configuration file ",(0,r.yg)("inlineCode",{parentName:"p"},"[.]aqua.y[a]ml")," from the current directory to the root directory."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-console"},'$ cd foo\n$ jq --version\njq-1.5\n\n$ cd ../..\n$ jq --version\nFATA[0000] aqua failed                                   error="command is not found" exe_name=jq program=aqua\n')),(0,r.yg)("p",null,"Let's update jq from 1.5 to 1.6."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"packages:\n- name: stedolan/jq\n  version: jq-1.6\n")),(0,r.yg)("p",null,"And run ",(0,r.yg)("inlineCode",{parentName:"p"},"jq --version"),".\nBefore jq is executed, jq is installed automatically."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-console"},"$ jq --version\nINFO[0000] download and unarchive the package            package_name=jq package_version=jq-1.6 program=aqua registry=standard\njq-1.6\n")),(0,r.yg)("p",null,"Let's downgrade jq from 1.6 to 1.5."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"packages:\n- name: stedolan/jq\n  version: jq-1.5\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-console"},"$ jq --version\njq-1.5\n")),(0,r.yg)("p",null,"The version of tool is changed seamlessly.\nYou don't have to execute ",(0,r.yg)("inlineCode",{parentName:"p"},"aqua"),"."),(0,r.yg)("p",null,"By adding ",(0,r.yg)("inlineCode",{parentName:"p"},"aqua.yaml")," in each Git repositories, you can manage tools for each repositories.\nDevelopers can use the same version, which prevents the problem due to the difference of tool versions.\naqua supports both MacOS and Linux, so even if you are working on MacOS and CI is run on Linux, you can manage tools with the same aqua.yaml."),(0,r.yg)("p",null,"aqua installs tools in ",(0,r.yg)("inlineCode",{parentName:"p"},"~/.local/share/aquaproj-aqua")," and shares tools across multiple ",(0,r.yg)("inlineCode",{parentName:"p"},"aqua.yaml"),", so the same version of the same tool is installed only at once.\nIt saves time and disk usage."),(0,r.yg)("p",null,"aqua supports the Global configuration.\nThis is useful to install tools in your laptop regardless the specific project.\nLike ",(0,r.yg)("inlineCode",{parentName:"p"},"dotfiles"),", it is good to manage the Global Configuration with Git and share it with your multiple laptops."),(0,r.yg)("h2",{id:"registry"},"Registry"),(0,r.yg)("p",null,"aqua supports the Sharable Configuration mechanism named ",(0,r.yg)("inlineCode",{parentName:"p"},"Registry"),"."),(0,r.yg)("p",null,"You can install jq with the simple configuration."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"registries:\n- type: standard\n  ref: v2.19.0\n\npackages:\n- name: stedolan/jq\n  version: jq-1.5\n")),(0,r.yg)("p",null,"In the above configuration, the ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua-registry"},"Standard Registry")," is being used.\nThe Standard Registry is the Registry maintained by aqua's maintainers."),(0,r.yg)("p",null,"Please see the configuration."),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua-registry/blob/v2.19.0/pkgs/stedolan/jq/registry.yaml"},"https://github.com/aquaproj/aqua-registry/blob/v2.19.0/pkgs/stedolan/jq/registry.yaml")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},'packages:\n  - type: github_release\n    repo_owner: stedolan\n    repo_name: jq\n    asset: "jq-{{.OS}}"\n    format: raw\n    description: Command-line JSON processor\n    replacements:\n      darwin: osx-amd64\n      linux: linux64\n      windows: win64.exe\n')),(0,r.yg)("p",null,"This is the configuration to download jq from GitHub Releases.\nUsing the Standard Registry, you can install tools very easily without complicated configuration."),(0,r.yg)("p",null,"You can search the tool from the Registries with ",(0,r.yg)("inlineCode",{parentName:"p"},"aqua g")," command.\nPlease add the Registries to your aqua.yaml's registries, and run ",(0,r.yg)("inlineCode",{parentName:"p"},"aqua g"),"."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"registries:\n- type: standard\n  ref: v2.19.0\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-console"},"$ aqua g\n")),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"aqua g")," launches the interactive UI and you can search the package by fuzzy search."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-console"},"  influxdata/influx-cli (standard) (influx)                     \u250c \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500\n  newrelic/newrelic-cli (standard) (newrelic)                   \u2502  cli/cli\n  pivotal-cf/pivnet-cli (standard) (pivnet)                     \u2502\n  scaleway/scaleway-cli (standard) (scw)                        \u2502  https://github.com/cli/cli\n  tfmigrator/cli (standard) (tfmigrator)                        \u2502  GitHub\u2019cs official command line tool\n  aws/copilot-cli (standard) (copilot)                          \u2502\n  create-go-app/cli (standard) (cgapp)                          \u2502\n  harness/drone-cli (standard) (drone)                          \u2502\n  sigstore/rekor (standard) (rekor-cli)                         \u2502\n  getsentry/sentry-cli (standard)                               \u2502\n  grafana/loki/logcli (standard)                                \u2502\n  knative/client (standard) (kn)                                \u2502\n  rancher/cli (standard) (rancher)                              \u2502\n  tektoncd/cli (standard) (tkn)                                 \u2502\n  civo/cli (standard) (civo)                                    \u2502\n  dapr/cli (standard) (dapr)                                    \u2502\n  mongodb/mongocli (standard)                                   \u2502\n  openfaas/faas-cli (standard)                                  \u2502\n> cli/cli (standard) (gh)                                       \u2502\n  50/433                                                        \u2502\n> cli                                                           \u2514 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500\n")),(0,r.yg)("p",null,"If the tool you need isn't found, please create the issue or send the pull request to the ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua-registry"},"Standard Registry"),"!\nBy adding various packages to the Standard Registry, aqua becomes more useful and attractive.\nYour contribution is needed!"),(0,r.yg)("p",null,"It is also easy to create your own Registries.\nJust create GitHub Repositories and add Registry Configuration like ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua-registry/blob/main/registry.yaml"},"the Standard Registry")," and add it to ",(0,r.yg)("inlineCode",{parentName:"p"},"aqua.yaml"),"'s registries.\nThe private repository is also supported."),(0,r.yg)("p",null,"e.g."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"registries:\n  - name: aquaproj/aqua-registry\n    type: github_content\n    repo_owner: aquaproj\n    repo_name: aqua-registry\n    ref: v2.19.0\n    path: registry.yaml\n")),(0,r.yg)("h2",{id:"cotinuous-update-by-renovate"},"Cotinuous update by Renovate"),(0,r.yg)("p",null,"aqua manages package and registry versions,\nso it is important to update them continuously.\naqua doesn't provide sub commands like ",(0,r.yg)("inlineCode",{parentName:"p"},"aqua update")," or options like ",(0,r.yg)("inlineCode",{parentName:"p"},"aqua install --update"),".\nWe recommend managing ",(0,r.yg)("inlineCode",{parentName:"p"},"aqua.yaml")," with Git and update versions by ",(0,r.yg)("a",{parentName:"p",href:"https://docs.renovatebot.com/"},"Renovate"),"."),(0,r.yg)("p",null,"Using Renovate's ",(0,r.yg)("a",{parentName:"p",href:"https://docs.renovatebot.com/modules/manager/regex/"},"Regex Manager"),", you can update versions."),(0,r.yg)("p",null,"The Renovate Preset Configuration ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua-renovate-config"},"https://github.com/aquaproj/aqua-renovate-config")," is useful.\nFor the detail, please see the ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua-renovate-config"},"README"),"."),(0,r.yg)("h2",{id:"summary"},"Summary"),(0,r.yg)("p",null,"In this post, I introduced ",(0,r.yg)("a",{parentName:"p",href:"https://aquaproj.github.io"},"aqua"),", which is a declarative CLI Version Manager.\nYou can install CLI tools and manage their versions with YAML declaratively.\naqua supports the ",(0,r.yg)("inlineCode",{parentName:"p"},"Lazy Install")," and Sharable Configuration mechanism named ",(0,r.yg)("inlineCode",{parentName:"p"},"Registry"),"."),(0,r.yg)("p",null,"You can search tools from Registries by ",(0,r.yg)("inlineCode",{parentName:"p"},"aqua g")," command.\nIf the tool you need isn't found, please create the issue or send the pull request to the ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua-registry"},"Standard Registry"),"!\nBy adding various packages to the Standard Registry, aqua becomes more useful and attractive.\nYour contribution is needed!"))}c.isMDXComponent=!0}}]);