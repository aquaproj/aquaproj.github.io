"use strict";(self.webpackChunkaqua_docusaurus=self.webpackChunkaqua_docusaurus||[]).push([[1995],{5680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>y});var a=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),f=r,y=c["".concat(s,".").concat(f)]||c[f]||g[f]||o;return n?a.createElement(y,i(i({ref:t},u),{},{components:n})):a.createElement(y,i({ref:t},u))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},413:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(8168),r=(n(6540),n(5680));const o={sidebar_position:200},i="Split the list of packages",l={unversionedId:"guides/split-config",id:"guides/split-config",title:"Split the list of packages",description:"You can split the list of packages.",source:"@site/docs/guides/split-config.md",sourceDirName:"guides",slug:"/guides/split-config",permalink:"/docs/guides/split-config",draft:!1,editUrl:"https://github.com/aquaproj/aquaproj.github.io/edit/main/docs/guides/split-config.md",tags:[],version:"current",sidebarPosition:200,frontMatter:{sidebar_position:200},sidebar:"tutorialSidebar",previous:{title:"Keep configuration files in one directory",permalink:"/docs/guides/keep-in-one-dir"},next:{title:"Update registries and packages by update command",permalink:"/docs/guides/update-command"}},s={},p=[{value:"\ud83d\udca1 Renovate Config Preset",id:"-renovate-config-preset",level:2}],u={toc:p},c="wrapper";function g(e){let{components:t,...n}=e;return(0,r.yg)(c,(0,a.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"split-the-list-of-packages"},"Split the list of packages"),(0,r.yg)("p",null,"You can split the list of packages."),(0,r.yg)("p",null,"e.g."),(0,r.yg)("p",null,"Directory structure"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"aqua.yaml\naqua/\n  conftest.yaml\n")),(0,r.yg)("p",null,"aqua.yaml"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"registries:\n- type: standard\n  ref: v4.155.1  # renovate: depName=aquaproj/aqua-registry\n\npackages:\n- import: aqua/*.yaml\n")),(0,r.yg)("p",null,"aqua/conftest.yaml"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"packages:\n- name: open-policy-agent/conftest@v0.28.2\n")),(0,r.yg)("p",null,"This is useful for CI.\nYou can execute test and lint only when the specific package is updated."),(0,r.yg)("p",null,"e.g. GitHub Actions' ",(0,r.yg)("a",{parentName:"p",href:"https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#onpushpull_requestpaths"},(0,r.yg)("inlineCode",{parentName:"a"},"on.<push|pull_request>.paths"))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"name: conftest\non:\n  pull_request:\n    paths:\n    - policy/**.rego\n    - aqua/conftest.yaml\n")),(0,r.yg)("h2",{id:"-renovate-config-preset"},"\ud83d\udca1 Renovate Config Preset"),(0,r.yg)("p",null,"To update split files by Renovate, please use the preset ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua-renovate-config#file-preset"},"aquaproj/aqua-renovate-config:file")),(0,r.yg)("p",null,"e.g."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "extends": [\n    "github>aquaproj/aqua-renovate-config:file#2.2.1(aqua/conftest\\\\.yaml)"\n  ]\n}\n')),(0,r.yg)("p",null,"You can also use the regular expression."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "extends": [\n    "github>aquaproj/aqua-renovate-config:file#2.2.1(aqua/.*\\\\.ya?ml)"\n  ]\n}\n')))}g.isMDXComponent=!0}}]);