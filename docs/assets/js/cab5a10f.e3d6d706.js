"use strict";(self.webpackChunkaqua_docusaurus=self.webpackChunkaqua_docusaurus||[]).push([[8876],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),l=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=l(r),m=o,f=c["".concat(i,".").concat(m)]||c[m]||d[m]||a;return r?n.createElement(f,p(p({ref:t},u),{},{components:r})):n.createElement(f,p({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,p=new Array(a);p[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[c]="string"==typeof e?e:o,p[1]=s;for(var l=2;l<a;l++)p[l]=r[l];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4476:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>p,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:1950},p="supported_envs",s={unversionedId:"registry-config/supported-envs",id:"registry-config/supported-envs",title:"supported_envs",description:"#882 #884",source:"@site/docs/registry-config/supported-envs.md",sourceDirName:"registry-config",slug:"/registry-config/supported-envs",permalink:"/docs/registry-config/supported-envs",draft:!1,editUrl:"https://github.com/aquaproj/aquaproj.github.io/edit/main/docs/registry-config/supported-envs.md",tags:[],version:"current",sidebarPosition:1950,frontMatter:{sidebar_position:1950},sidebar:"tutorialSidebar",previous:{title:"checksum",permalink:"/docs/registry-config/checksum"},next:{title:"complete_windows_ext",permalink:"/docs/registry-config/complete-windows-ext"}},i={},l=[{value:"Example Code",id:"example-code",level:2}],u={toc:l},c="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(c,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"supported_envs"},"supported_envs"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua/issues/882"},"#882")," ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua/pull/884"},"#884")),(0,o.kt)("p",null,"aqua >= v1.12.0"),(0,o.kt)("p",null,"You can specify the list of supported environments (GOOS and GOARCH) in ",(0,o.kt)("inlineCode",{parentName:"p"},"supported_envs"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"supported_envs")," has been introduced to solve the following ",(0,o.kt)("inlineCode",{parentName:"p"},"supported_if")," problems."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Complicated. There are multiple ways to express the same environments. The expression is too flexible "),(0,o.kt)("li",{parentName:"ol"},"Performance. aqua has to compile and evaluate the expression per tool. It may affect the performance although we should do the performance test")),(0,o.kt)("h2",{id:"example-code"},"Example Code"),(0,o.kt)("p",null,"AS IS"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'packages:\n  - type: github_release\n    repo_owner: gruntwork-io\n    repo_name: terragrunt\n    asset: terragrunt_{{.OS}}_{{.Arch}}\n    supported_if: not (GOOS == "windows" and GOARCH == "arm64")\n')),(0,o.kt)("p",null,"TO BE"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"packages:\n  - type: github_release\n    repo_owner: gruntwork-io\n    repo_name: terragrunt\n    asset: terragrunt_{{.OS}}_{{.Arch}}\n    supported_envs:\n      - windows/amd64\n      - darwin\n      - linux\n")),(0,o.kt)("p",null,"The following patterns are supported."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"<GOOS>")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"<GOOS>/<GOARCH>"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"supported_envs: [] # no environment is supported\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'supported_envs: ["all"] # all environments are supported\n')))}d.isMDXComponent=!0}}]);