"use strict";(self.webpackChunkaqua_docusaurus=self.webpackChunkaqua_docusaurus||[]).push([[541],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),g=i,d=u["".concat(s,".").concat(g)]||u[g]||m[g]||a;return n?r.createElement(d,o(o({ref:t},p),{},{components:n})):r.createElement(d,o({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},9688:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const a={sidebar_position:2e3},o="cosign",l={unversionedId:"registry-config/cosign",id:"registry-config/cosign",title:"cosign",description:"- aqua > v1.26.0",source:"@site/docs/registry-config/cosign.md",sourceDirName:"registry-config",slug:"/registry-config/cosign",permalink:"/docs/registry-config/cosign",draft:!1,editUrl:"https://github.com/aquaproj/aquaproj.github.io/edit/main/docs/registry-config/cosign.md",tags:[],version:"current",sidebarPosition:2e3,frontMatter:{sidebar_position:2e3},sidebar:"tutorialSidebar",previous:{title:"complete_windows_ext",permalink:"/docs/registry-config/complete-windows-ext"},next:{title:"slsa_provenance",permalink:"/docs/registry-config/slsa-provenance"}},s={},c=[{value:"Fields",id:"fields",level:2}],p={toc:c},u="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"cosign"},"cosign"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"aqua > v1.26.0"))),(0,i.kt)("p",null,"Please see ",(0,i.kt)("a",{parentName:"p",href:"/docs/security/cosign-slsa"},"Cosign and SLSA Provenance Support")," too."),(0,i.kt)("h2",{id:"fields"},"Fields"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"cosign_experimental (boolean): If ",(0,i.kt)("inlineCode",{parentName:"li"},"true"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"cosign verify-blob")," is run with the environment variable ",(0,i.kt)("inlineCode",{parentName:"li"},"COSIGN_EXPERIMENTAL=1")),(0,i.kt)("li",{parentName:"ul"},"opts ([]string): ",(0,i.kt)("a",{parentName:"li",href:"https://docs.sigstore.dev/cosign/working_with_blobs"},"cosign verify-blob")," options"),(0,i.kt)("li",{parentName:"ul"},"signature",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"type (string): ",(0,i.kt)("inlineCode",{parentName:"li"},"github_release")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"http")),(0,i.kt)("li",{parentName:"ul"},"repo_owner (string) (optional):"),(0,i.kt)("li",{parentName:"ul"},"repo_name (string) (optional):"),(0,i.kt)("li",{parentName:"ul"},"url (string) (",(0,i.kt)("inlineCode",{parentName:"li"},"http")," requires):"),(0,i.kt)("li",{parentName:"ul"},"asset (string) (",(0,i.kt)("inlineCode",{parentName:"li"},"github_release")," requires):"))),(0,i.kt)("li",{parentName:"ul"},"key",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"same as ",(0,i.kt)("inlineCode",{parentName:"li"},"signature")))),(0,i.kt)("li",{parentName:"ul"},"certificate",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"same as ",(0,i.kt)("inlineCode",{parentName:"li"},"signature"))))),(0,i.kt)("p",null,"e.g."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"cosign:\n  cosign_experimental: true\n  opts:\n    - --signature\n    - https://github.com/terraform-linters/tflint/releases/download/{{.Version}}/checksums.txt.keyless.sig\n    - --certificate\n    - https://github.com/terraform-linters/tflint/releases/download/{{.Version}}/checksums.txt.pem\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"cosign:\n  cosign_experimental: true\n  signature:\n    type: github_release\n    asset: checksums.txt.keyless.sig\n  certificate:\n    type: github_release\n    asset: checksums.txt.pem\n")))}m.isMDXComponent=!0}}]);