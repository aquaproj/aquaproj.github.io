"use strict";(self.webpackChunkaqua_docusaurus=self.webpackChunkaqua_docusaurus||[]).push([[282],{5680:(e,a,t)=>{t.d(a,{xA:()=>l,yg:()=>h});var n=t(6540);function i(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function u(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function r(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?u(Object(t),!0).forEach((function(a){i(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):u(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,i=function(e,a){if(null==e)return{};var t,n,i={},u=Object.keys(e);for(n=0;n<u.length;n++)t=u[n],a.indexOf(t)>=0||(i[t]=e[t]);return i}(e,a);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(n=0;n<u.length;n++)t=u[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=n.createContext({}),o=function(e){var a=n.useContext(c),t=a;return e&&(t="function"==typeof e?e(a):r(r({},a),e)),t},l=function(e){var a=o(e.components);return n.createElement(c.Provider,{value:a},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},g=n.forwardRef((function(e,a){var t=e.components,i=e.mdxType,u=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=o(t),g=i,h=p["".concat(c,".").concat(g)]||p[g]||m[g]||u;return t?n.createElement(h,r(r({ref:a},l),{},{components:t})):n.createElement(h,r({ref:a},l))}));function h(e,a){var t=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var u=t.length,r=new Array(u);r[0]=g;var s={};for(var c in a)hasOwnProperty.call(a,c)&&(s[c]=a[c]);s.originalType=e,s[p]="string"==typeof e?e:i,r[1]=s;for(var o=2;o<u;o++)r[o]=t[o];return n.createElement.apply(null,r)}return n.createElement.apply(null,t)}g.displayName="MDXCreateElement"},1199:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>r,default:()=>m,frontMatter:()=>u,metadata:()=>s,toc:()=>o});var n=t(8168),i=(t(6540),t(5680));const u={sidebar_position:15},r="Enable Checksum Verification",s={unversionedId:"guides/checksum",id:"guides/checksum",title:"Enable Checksum Verification",description:"About Checksum Verification, please see also.",source:"@site/docs/guides/checksum.md",sourceDirName:"guides",slug:"/guides/checksum",permalink:"/docs/guides/checksum",draft:!1,editUrl:"https://github.com/aquaproj/aquaproj.github.io/edit/main/docs/guides/checksum.md",tags:[],version:"current",sidebarPosition:15,frontMatter:{sidebar_position:15},sidebar:"tutorialSidebar",previous:{title:"Update packages by Renovate",permalink:"/docs/guides/renovate"},next:{title:"Policy as Code",permalink:"/docs/guides/policy-as-code"}},c={},o=[{value:"Create a GitHub Repository",id:"create-a-github-repository",level:2},{value:"Prepare GitHub Access Token",id:"prepare-github-access-token",level:2},{value:"Create aqua.yaml",id:"create-aquayaml",level:2},{value:"Enable Checksum Verification",id:"enable-checksum-verification-1",level:2},{value:"Set up GitHub Actions Workflow",id:"set-up-github-actions-workflow",level:2},{value:"Create a pull request",id:"create-a-pull-request",level:2},{value:"Change a package version",id:"change-a-package-version",level:2},{value:"See how Checksum Verification prevents tampering",id:"see-how-checksum-verification-prevents-tampering",level:2},{value:"\ud83d\udca1 Update aqua-checksums.json using autofix.ci",id:"-update-aqua-checksumsjson-using-autofixci",level:2}],l={toc:o},p="wrapper";function m(e){let{components:a,...t}=e;return(0,i.yg)(p,(0,n.A)({},l,t,{components:a,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"enable-checksum-verification"},"Enable Checksum Verification"),(0,i.yg)("p",null,"About Checksum Verification, please see also."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/docs/reference/security/checksum"},"Reference")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/docs/reference/config/checksum"},"Configuration")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/checksum"},"Registry Configuration")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/docs/reference/usage#aqua-update-checksum"},"Usage > aqua update-checksum"))),(0,i.yg)("h2",{id:"create-a-github-repository"},"Create a GitHub Repository"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"https://github.com/new"},"Let's create a GitHub Repository for this tutorial"),".\nYou can remove the repository after this tutorial."),(0,i.yg)("h2",{id:"prepare-github-access-token"},"Prepare GitHub Access Token"),(0,i.yg)("p",null,"Please create a classic personal access token and add it to Repository Secrets."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"name: GH_TOKEN"),(0,i.yg)("li",{parentName:"ul"},"required permissions: ",(0,i.yg)("inlineCode",{parentName:"li"},"contents: write"))),(0,i.yg)("admonition",{type:"caution"},(0,i.yg)("p",{parentName:"admonition"},"GitHub Actions' token ",(0,i.yg)("inlineCode",{parentName:"p"},"GITHUB_TOKEN")," is unavailable.")),(0,i.yg)("admonition",{type:"info"},(0,i.yg)("p",{parentName:"admonition"},(0,i.yg)("del",{parentName:"p"},"Unfortunately, fine-grained personal access token is unavailable at the moment because it doesn't support GraphQL API."),"\n",(0,i.yg)("del",{parentName:"p"},(0,i.yg)("a",{parentName:"del",href:"https://github.com/cli/cli/issues/6680"},"https://github.com/cli/cli/issues/6680"))),(0,i.yg)("p",{parentName:"admonition"},"2023-04-27 ",(0,i.yg)("a",{parentName:"p",href:"https://github.blog/changelog/2023-04-27-graphql-improvements-for-fine-grained-pats-and-github-apps/"},"fine-grained access token supports GraphQL API now."))),(0,i.yg)("admonition",{type:"info"},(0,i.yg)("p",{parentName:"admonition"},"In this time we use a classic personal access token, but we recommend GitHub App or fine-grained access token in terms of security.")),(0,i.yg)("h2",{id:"create-aquayaml"},"Create aqua.yaml"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"aqua init\naqua g -i suzuki-shunsuke/tfcmt\n")),(0,i.yg)("h2",{id:"enable-checksum-verification-1"},"Enable Checksum Verification"),(0,i.yg)("p",null,"By default, checksum verification is disabled.\nLet's edit aqua.yaml and enable Checksum Verification."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-yaml"},"---\nchecksum:\n  enabled: true\nregistries:\n- type: standard\n  ref: v4.155.1 # renovate: depName=aquaproj/aqua-registry\npackages:\n- name: suzuki-shunsuke/tfcmt@v4.2.0\n")),(0,i.yg)("h2",{id:"set-up-github-actions-workflow"},"Set up GitHub Actions Workflow"),(0,i.yg)("admonition",{type:"caution"},(0,i.yg)("p",{parentName:"admonition"},"For CircleCI Users, please use ",(0,i.yg)("a",{parentName:"p",href:"https://circleci.com/developer/orbs/orb/aquaproj/aqua#commands-update-checksum"},"circleci-orb-aqua's update-checksum command")," instead.")),(0,i.yg)("p",null,"To create and update ",(0,i.yg)("inlineCode",{parentName:"p"},"aqua-checksum.json")," automatically, let's set up GitHub Actions."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"mkdir -p .github/workflows\nvi .github/workflows/update-aqua-checksum.yaml\n")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-yaml"},"name: update-aqua-checksum\non:\n  pull_request:\n    paths:\n      - aqua.yaml\n      - aqua-checksums.json\njobs:\n  update-aqua-checksums:\n    uses: aquaproj/update-checksum-workflow/.github/workflows/update-checksum.yaml@f367004e7f17e99d30297cd9e89afad30ee1f251 # v1.0.0\n    permissions:\n      contents: read\n    with:\n      aqua_version: v2.28.0\n      prune: true\n    secrets:\n      gh_token: ${{secrets.GH_TOKEN}}\n      # gh_app_id: ${{secrets.APP_ID}}\n      # gh_app_private_key: ${{secrets.APP_PRIVATE_KEY}}\n")),(0,i.yg)("p",null,"We use ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/update-checksum-action"},"update-checksum-action"),".\nThis action depends on ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/int128/ghcp"},"int128/ghcp"),", so let's install it by aqua."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"aqua g -i int128/ghcp\n")),(0,i.yg)("h2",{id:"create-a-pull-request"},"Create a pull request"),(0,i.yg)("p",null,"Commit ",(0,i.yg)("inlineCode",{parentName:"p"},"aqua.yaml")," and ",(0,i.yg)("inlineCode",{parentName:"p"},".github/workflows/update-aqua-checksum.yaml"),"."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},'git checkout -b ci/aqua-checksum\ngit add aqua.yaml .github/workflows/update-aqua-checksum.yaml\ngit commit -m "ci: add aqua.yaml and set up workflow"\ngit push origin ci/aqua-checksum\n')),(0,i.yg)("p",null,"Create a pull request. Then ",(0,i.yg)("inlineCode",{parentName:"p"},"aqua-checksums.json")," will be created by GitHub Actions."),(0,i.yg)("p",null,(0,i.yg)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/13323303/224527388-720ce451-bdce-4055-9eed-ba0942615eea.png",alt:"image"})),(0,i.yg)("p",null,(0,i.yg)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/13323303/224527533-8fc150e2-55c1-4ca4-a9c7-f05544fdeccb.png",alt:"image"})),(0,i.yg)("h2",{id:"change-a-package-version"},"Change a package version"),(0,i.yg)("p",null,"Let's change version."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},'sed -i "s/v4.2.0/v4.1.0/" aqua.yaml\n')),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-diff"},"-- name: suzuki-shunsuke/tfcmt@v4.2.0\n+- name: suzuki-shunsuke/tfcmt@v4.1.0\n")),(0,i.yg)("p",null,"Push a commit."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},'git pull origin ci/aqua-checksum\ngit add aqua.yaml\ngit commit -m "chore: change tfcmt version"\ngit push origin "ci/aqua-checksum"\n')),(0,i.yg)("p",null,"Then ",(0,i.yg)("inlineCode",{parentName:"p"},"aqua-checksums.json")," is updated automatically."),(0,i.yg)("p",null,(0,i.yg)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/13323303/224527976-4ddb1607-9958-4269-8882-3c0657e98a72.png",alt:"image"})),(0,i.yg)("p",null,(0,i.yg)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/13323303/224528023-72aba252-7507-47fa-87b2-dc08eb7f908b.png",alt:"image"})),(0,i.yg)("h2",{id:"see-how-checksum-verification-prevents-tampering"},"See how Checksum Verification prevents tampering"),(0,i.yg)("p",null,"Let's see how Checksum Verification prevents tampering.\nIt's bothersome to tamper assets actually, so in this time let's simulate the situation by tampering checksum in ",(0,i.yg)("inlineCode",{parentName:"p"},"aqua-checksums.json"),"."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"git pull origin ci/aqua-checksum\nvi aqua-checksums.json\n")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-diff"},'     {\n       "id": "github_release/github.com/suzuki-shunsuke/tfcmt/v4.1.0/tfcmt_linux_amd64.tar.gz",\n-      "checksum": "A8E55BEA1A5F94F9515FD9C5C3296D1874461BA1DBD158B3FC0ED6A0DB3B7D91",\n+      "checksum": "A8E55BEA1A5F94F9515FD9C5C3296D1874461BA1DBD158B3FC0ED6A0DB3B7D92",\n       "algorithm": "sha256"\n     },\n')),(0,i.yg)("p",null,"Add a GitHub Actions job that runs a tampered package."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-yaml"},'  test:\n    runs-on: ubuntu-latest\n    permissions:\n      contents: read\n    env:\n      AQUA_LOG_COLOR: always\n      AQUA_REQUIRE_CHECKSUM: "true"\n    steps:\n      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0\n      - uses: aquaproj/aqua-installer@6ce1f8848ec8e61f14d57bd5d7597057a6dd187c # v3.0.1\n        with:\n          aqua_version: v2.28.0\n        env:\n          GITHUB_TOKEN: ${{github.token}}\n      - run: tfcmt -v\n')),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},'git add aqua-checksums.json\ngit commit -m "chore: tamper aqua-checksums.json"\ngit push origin "ci/aqua-checksum"\n')),(0,i.yg)("p",null,"Then ",(0,i.yg)("inlineCode",{parentName:"p"},"test")," job would fail because the checksum is unmatched."),(0,i.yg)("p",null,(0,i.yg)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/13323303/224528789-eeda95e7-73b9-46a3-95da-da954087e83b.png",alt:"image"})),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},'time="2023-03-12T06:36:05Z" level=fatal msg="aqua failed" actual_checksum=A8E55BEA1A5F94F9515FD9C5C3296D1874461BA1DBD158B3FC0ED6A0DB3B7D91 aqua_version=2.28.0 env=linux/amd64 error="checksum is invalid" exe_name=tfcmt expected_checksum=A8E55BEA1A5F94F9515FD9C5C3296D1874461BA1DBD158B3FC0ED6A0DB3B7D92 package=suzuki-shunsuke/tfcmt package_version=v4.1.0 program=aqua\n')),(0,i.yg)("h2",{id:"-update-aqua-checksumsjson-using-autofixci"},"\ud83d\udca1 Update aqua-checksums.json using autofix.ci"),(0,i.yg)("p",null,"Instead of ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/update-checksum-action"},"update-checksum-action")," and ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/update-checksum-workflow"},"update-checksum-workflow"),", you can use ",(0,i.yg)("inlineCode",{parentName:"p"},"aqua upc")," command and ",(0,i.yg)("a",{parentName:"p",href:"https://autofix.ci/"},"autofix.ci"),"."),(0,i.yg)("p",null,"About autofix.ci, please see the website. ",(0,i.yg)("a",{parentName:"p",href:"https://autofix.ci/"},"https://autofix.ci/"),"\nautofix.ci is free for OSS.\nautofix.ci has various benefits:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"You can fix pull requests from fork securely"),(0,i.yg)("li",{parentName:"ul"},"Easy to use. You don't need to take care of how to create and push commits"),(0,i.yg)("li",{parentName:"ul"},"Commits are verified"),(0,i.yg)("li",{parentName:"ul"},"You no longer need to branch processing based on whether the pull request is from a fork or not")),(0,i.yg)("p",null,"We're using autofix.ci in various places."),(0,i.yg)("p",null,"e.g. ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua-renovate-config/blob/main/.github/workflows/autofix.yaml"},"https://github.com/aquaproj/aqua-renovate-config/blob/main/.github/workflows/autofix.yaml")),(0,i.yg)("p",null,"This is an example workflow:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-yaml"},"name: autofix.ci\non: pull_request\npermissions: {}\njobs:\n  autofix:\n    runs-on: ubuntu-24.04\n    permissions: {}\n    timeout-minutes: 15\n    steps:\n      - name: Checkout the repository\n        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2\n        with:\n          persist-credentials: false\n      - name: Install aqua\n        uses: aquaproj/aqua-installer@e2d0136abcf70b7a2f6f505720640750557c4b33 # v3.1.1\n        with:\n          aqua_version: v2.43.0\n      - name: Fix aqua-checksums.json\n        run: aqua upc -prune\n      - name: Run autofix.ci\n        uses: autofix-ci/action@2891949f3779a1cafafae1523058501de3d4e944 # v1.3.1\n")))}m.isMDXComponent=!0}}]);