"use strict";(self.webpackChunkaqua_docusaurus=self.webpackChunkaqua_docusaurus||[]).push([[39],{5680:(e,a,n)=>{n.d(a,{xA:()=>c,yg:()=>g});var t=n(6540);function o(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){o(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,t,o=function(e,a){if(null==e)return{};var n,t,o={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(o[n]=e[n]);return o}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=t.createContext({}),s=function(e){var a=t.useContext(u),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},c=function(e){var a=s(e.components);return t.createElement(u.Provider,{value:a},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef((function(e,a){var n=e.components,o=e.mdxType,r=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(n),m=o,g=p["".concat(u,".").concat(m)]||p[m]||d[m]||r;return n?t.createElement(g,i(i({ref:a},c),{},{components:n})):t.createElement(g,i({ref:a},c))}));function g(e,a){var n=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var u in a)hasOwnProperty.call(a,u)&&(l[u]=a[u]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<r;s++)i[s]=n[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1652:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var t=n(8168),o=(n(6540),n(5680));const r={sidebar_position:700},i="Build Container (Docker) Image",l={unversionedId:"guides/build-container-image",id:"guides/build-container-image",title:"Build Container (Docker) Image",description:"When building a container (Docker) image, you may want to download and install tools from GitHub Releases or other sources.",source:"@site/docs/guides/build-container-image.md",sourceDirName:"guides",slug:"/guides/build-container-image",permalink:"/docs/guides/build-container-image",draft:!1,editUrl:"https://github.com/aquaproj/aquaproj.github.io/edit/main/docs/guides/build-container-image.md",tags:[],version:"current",sidebarPosition:700,frontMatter:{sidebar_position:700},sidebar:"tutorialSidebar",previous:{title:"Install Standard Registry's all packages very quickly",permalink:"/docs/guides/install-all-packages"},next:{title:"Wrap aqua with task runner such as GNU Make",permalink:"/docs/guides/wrap-aqua-with-task-runner"}},u={},s=[{value:"Remove aqua from Image",id:"remove-aqua-from-image",level:2},{value:"Notes of <code>aqua cp</code>",id:"notes-of-aqua-cp",level:2}],c={toc:s},p="wrapper";function d(e){let{components:a,...n}=e;return(0,o.yg)(p,(0,t.A)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"build-container-docker-image"},"Build Container (Docker) Image"),(0,o.yg)("p",null,"When building a container (Docker) image, you may want to download and install tools from GitHub Releases or other sources.\nIn particular, if you run CI with CircleCI or Google Cloud Build, you may want to install tools for CI on the image."),(0,o.yg)("p",null,"Traditionally, you would use curl, tar, unzip, etc. to install these tools, but with aqua, you can declaratively manage them.\nYou don't have to look up download URLs, formats, etc. yourself.\nYou can also use Renovate to automate updates."),(0,o.yg)("p",null,"aqua.yaml"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-yaml"},"---\n# aqua - Declarative CLI Version Manager\n# https://aquaproj.github.io/\nregistries:\n- type: standard\n  ref: v4.155.1  # renovate: depName=aquaproj/aqua-registry\npackages:\n- name: rhysd/actionlint@v1.6.15\n- name: golangci/golangci-lint@v1.47.2\n- name: reviewdog/reviewdog@v0.14.1\n")),(0,o.yg)("p",null,"Dockerfile"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-dockerfile"},'FROM debian:bookworm-20240408\nENV PATH=/root/.local/share/aquaproj-aqua/bin:$PATH\nCOPY aqua.yaml aqua-checksums.json /etc/aqua/\nENV AQUA_GLOBAL_CONFIG=/etc/aqua/aqua.yaml\nRUN apt-get update && \\\n    apt-get install -y curl && \\\n    curl -sSfL -O https://raw.githubusercontent.com/aquaproj/aqua-installer/v3.0.1/aqua-installer && \\\n    echo "fb4b3b7d026e5aba1fc478c268e8fbd653e01404c8a8c6284fdba88ae62eda6a  aqua-installer" | sha256sum -c && \\\n    chmod +x aqua-installer && \\\n    ./aqua-installer -v v2.28.0 && \\\n    rm aqua-installer && \\\n    aqua i -a && \\\n    apt-get remove -y curl && \\\n    apt-get clean\n')),(0,o.yg)("h2",{id:"remove-aqua-from-image"},"Remove aqua from Image"),(0,o.yg)("p",null,"aqua >= ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua/releases/tag/v1.18.0"},"v1.18.0")),(0,o.yg)("p",null,"In the above Docker image, aqua is installed and used internally to execute tools.\nHowever, if you do not want to install anything extra in the Docker image, if you want to keep the image minimal, or if you do not want to switch tool versions with aqua,\nyou can also remove aqua using the Multistage Build and ",(0,o.yg)("inlineCode",{parentName:"p"},"aqua cp")," command."),(0,o.yg)("p",null,"Dockerfile"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-dockerfile"},'FROM debian:bookworm-20240408 AS aqua\nENV PATH=/root/.local/share/aquaproj-aqua/bin:$PATH\nCOPY aqua.yaml aqua-checksums.json /etc/aqua/\nENV AQUA_GLOBAL_CONFIG=/etc/aqua/aqua.yaml\nRUN apt-get update\nRUN apt-get install -y curl\nRUN curl -sSfL -O https://raw.githubusercontent.com/aquaproj/aqua-installer/v3.0.1/aqua-installer\nRUN echo "fb4b3b7d026e5aba1fc478c268e8fbd653e01404c8a8c6284fdba88ae62eda6a  aqua-installer" | sha256sum -c\nRUN chmod +x aqua-installer\nRUN ./aqua-installer -v v2.28.0\nRUN aqua i -a\nRUN aqua cp -o /dist actionlint reviewdog\n\nFROM debian:bookworm-20240408\nCOPY --from=aqua /dist/* /usr/local/bin/\n')),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"aqua cp")," installs specified tools and copies executable files to the specified directory.\nIn the above example, actionlint and reviewdog are installed and copied under /dist.\nOnly executable files are installed in the final image."),(0,o.yg)("h2",{id:"notes-of-aqua-cp"},"Notes of ",(0,o.yg)("inlineCode",{parentName:"h2"},"aqua cp")),(0,o.yg)("p",null,"There is a caveat to ",(0,o.yg)("inlineCode",{parentName:"p"},"aqua cp"),".\n",(0,o.yg)("inlineCode",{parentName:"p"},"aqua cp")," copies only executable files from packages.\nTherefore, tools that do not work with a single file will not work properly even if they are copied by ",(0,o.yg)("inlineCode",{parentName:"p"},"aqua cp"),".\nIf the tool is a single binary written in Go, there is basically no problem, but if it is a shell script depending on another files in the same repository, it will not work properly."),(0,o.yg)("p",null,"For example, tfenv will not work correctly even if you copy it by ",(0,o.yg)("inlineCode",{parentName:"p"},"aqua cp"),".\nYou need to install those tools in a different way."))}d.isMDXComponent=!0}}]);