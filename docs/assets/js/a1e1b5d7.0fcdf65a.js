"use strict";(self.webpackChunkaqua_docusaurus=self.webpackChunkaqua_docusaurus||[]).push([[9011],{5680:(e,r,a)=>{a.d(r,{xA:()=>g,yg:()=>y});var n=a(6540);function t(e,r,a){return r in e?Object.defineProperty(e,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[r]=a,e}function i(e,r){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var r=1;r<arguments.length;r++){var a=null!=arguments[r]?arguments[r]:{};r%2?i(Object(a),!0).forEach((function(r){t(e,r,a[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(a,r))}))}return e}function l(e,r){if(null==e)return{};var a,n,t=function(e,r){if(null==e)return{};var a,n,t={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],r.indexOf(a)>=0||(t[a]=e[a]);return t}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],r.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}var s=n.createContext({}),c=function(e){var r=n.useContext(s),a=r;return e&&(a="function"==typeof e?e(r):o(o({},r),e)),a},g=function(e){var r=c(e.components);return n.createElement(s.Provider,{value:r},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var a=e.components,t=e.mdxType,i=e.originalType,s=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),p=c(a),u=t,y=p["".concat(s,".").concat(u)]||p[u]||m[u]||i;return a?n.createElement(y,o(o({ref:r},g),{},{components:a})):n.createElement(y,o({ref:r},g))}));function y(e,r){var a=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var s in r)hasOwnProperty.call(r,s)&&(l[s]=r[s]);l.originalType=e,l[p]="string"==typeof e?e:t,o[1]=l;for(var c=2;c<i;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},9463:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=a(8168),t=(a(6540),a(5680));const i={sidebar_position:100},o="Registry Configuration",l={unversionedId:"reference/registry-config/index",id:"reference/registry-config/index",title:"Registry Configuration",description:"e.g. registry.yaml",source:"@site/docs/reference/registry-config/index.md",sourceDirName:"reference/registry-config",slug:"/reference/registry-config/",permalink:"/docs/reference/registry-config/",draft:!1,editUrl:"https://github.com/aquaproj/aquaproj.github.io/edit/main/docs/reference/registry-config/index.md",tags:[],version:"current",sidebarPosition:100,frontMatter:{sidebar_position:100},sidebar:"tutorialSidebar",previous:{title:"Experimental Feature",permalink:"/docs/reference/config/experimental-feature"},next:{title:"vars",permalink:"/docs/reference/registry-config/vars"}},s={},c=[{value:"JSON Schema",id:"json-schema",level:2},{value:"Package types",id:"package-types",level:2},{value:"Common attributes",id:"common-attributes",level:2},{value:"Default values if <code>repo_owner</code> and <code>repo_name</code> are set",id:"default-values-if-repo_owner-and-repo_name-are-set",level:2}],g={toc:c},p="wrapper";function m(e){let{components:r,...a}=e;return(0,t.yg)(p,(0,n.A)({},g,a,{components:r,mdxType:"MDXLayout"}),(0,t.yg)("h1",{id:"registry-configuration"},"Registry Configuration"),(0,t.yg)("p",null,"e.g. ",(0,t.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/aqua-registry/blob/main/registry.yaml"},"registry.yaml")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-yaml"},"packages:\n# init: a\n- type: github_release\n  repo_owner: accurics\n  repo_name: terrascan\n  asset: 'terrascan_{{trimV .Version}}_{{title .OS}}_{{.Arch}}.tar.gz'\n  link: https://docs.accurics.com/projects/accurics-terrascan/en/latest/\n  description: Detect compliance and security violations across Infrastructure as Code to mitigate risk before provisioning cloud native infrastructure\n  replacements:\n    amd64: x86_64\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"packages"),": The list of packages")),(0,t.yg)("h2",{id:"json-schema"},"JSON Schema"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://github.com/aquaproj/aqua/tree/main/json-schema"},"https://github.com/aquaproj/aqua/tree/main/json-schema")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://github.com/aquaproj/aqua/blob/main/json-schema/registry.json"},"https://github.com/aquaproj/aqua/blob/main/json-schema/registry.json")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://raw.githubusercontent.com/aquaproj/aqua/main/json-schema/registry.json"},"https://raw.githubusercontent.com/aquaproj/aqua/main/json-schema/registry.json"))),(0,t.yg)("h2",{id:"package-types"},"Package types"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/cargo-package"},"cargo"),": The package is installed by ",(0,t.yg)("a",{parentName:"li",href:"https://doc.rust-lang.org/cargo/commands/cargo-install.html"},"cargo install")," command. ",(0,t.yg)("inlineCode",{parentName:"li"},"aqua >= v2.8.0")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/github-archive-package"},"github_archive"),": The package is downloaded from GitHub Archive"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/github-content-package"},"github_content"),": The package is downloaded from GitHub Content"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/github-release-package"},"github_release"),": The package is downloaded from GitHub Releases"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/go-build-package"},"go_build"),": The package is installed by ",(0,t.yg)("inlineCode",{parentName:"li"},"go build")," command. ",(0,t.yg)("inlineCode",{parentName:"li"},"aqua >= v2.11.0")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/go-install-package"},"go_install"),": The package is installed by ",(0,t.yg)("inlineCode",{parentName:"li"},"go install")," command. ",(0,t.yg)("inlineCode",{parentName:"li"},"aqua >= v1.10.0")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/http-package"},"http"),": The package is downloaded from the specified URL")),(0,t.yg)("h2",{id:"common-attributes"},"Common attributes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"type"),": (string, required) the package type"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"name"),": (string) the package name. This is used to specify the package in ",(0,t.yg)("inlineCode",{parentName:"li"},"aqua.yaml"),". name must be unique in the same registry"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/search-words"},"search_words")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/aliases"},"aliases"),": Aliases of the package"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/files"},"files"),": The list of executable files"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/format"},"format")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/format"},"append_ext")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"link"),": URL about the package. This is used for ",(0,t.yg)("inlineCode",{parentName:"li"},"aqua g")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"description"),": The description about the package. This is used for ",(0,t.yg)("inlineCode",{parentName:"li"},"aqua g")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/replacements"},"replacements"),": A map which is used to replace some Template Variables like ",(0,t.yg)("inlineCode",{parentName:"li"},"OS")," and ",(0,t.yg)("inlineCode",{parentName:"li"},"Arch")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/format-overrides"},"format_overrides"),": A list of the pair OS and the asset format"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/overrides"},"overrides")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/version-overrides"},"version_constraint"),": ",(0,t.yg)("a",{parentName:"li",href:"https://github.com/antonmedv/expr"},"expr"),"'s expression. The evaluation result must be a boolean"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/version-overrides"},"version_overrides")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/supported-if"},"supported_if")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/supported-envs"},"supported_envs")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/rosetta2"},"rosetta2")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/windows_arm_emulation"},"windows_arm_emulation")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/version-filter"},"version_filter")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/version-source"},"version_source")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/complete-windows-ext"},"complete_windows_ext")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/security/checksum"},"checksum")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/cosign"},"cosign")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/slsa-provenance"},"slsa_provenance")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/minisign"},"minisign")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/github-artifact-attestations"},"github_artifact_attestations")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/private"},"private")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/no_asset"},"no_asset")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/error_message"},"error_message")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/reference/registry-config/vars"},"vars"))),(0,t.yg)("h2",{id:"default-values-if-repo_owner-and-repo_name-are-set"},"Default values if ",(0,t.yg)("inlineCode",{parentName:"h2"},"repo_owner")," and ",(0,t.yg)("inlineCode",{parentName:"h2"},"repo_name")," are set"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"name"),": ",(0,t.yg)("inlineCode",{parentName:"li"},"<repo owner>/<repo name>")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"link"),": ",(0,t.yg)("inlineCode",{parentName:"li"},"https://github.com/<repo owner>/<repo name>")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"files"),": ",(0,t.yg)("inlineCode",{parentName:"li"},'[{"name":"<repo name>"}]'))),(0,t.yg)("p",null,"For example, in case of ",(0,t.yg)("inlineCode",{parentName:"p"},"weaveworks/eksctl")," the following default values are set."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-yaml"},"name: weaveworks/eksctl\nlink: https://github.com/weaveworks/eksctl\nfiles:\n- name: eksctl\n")))}m.isMDXComponent=!0}}]);