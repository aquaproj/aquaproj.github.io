"use strict";(self.webpackChunkaqua_docusaurus=self.webpackChunkaqua_docusaurus||[]).push([[7776],{5680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>h});var a=t(6540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),s=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=s(e.components);return a.createElement(c.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=s(t),g=r,h=u["".concat(c,".").concat(g)]||u[g]||m[g]||o;return t?a.createElement(h,l(l({ref:n},p),{},{components:t})):a.createElement(h,l({ref:n},p))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=g;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[u]="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=t[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},6108:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var a=t(8168),r=(t(6540),t(5680));const o={sidebar_position:890},l="Shell Completion",i={unversionedId:"reference/config/shell-completion",id:"reference/config/shell-completion",title:"Shell Completion",description:"- aqua >= v1.11.0 #856 #859",source:"@site/docs/reference/config/shell-completion.md",sourceDirName:"reference/config",slug:"/reference/config/shell-completion",permalink:"/docs/reference/config/shell-completion",draft:!1,editUrl:"https://github.com/aquaproj/aquaproj.github.io/edit/main/docs/reference/config/shell-completion.md",tags:[],version:"current",sidebarPosition:890,frontMatter:{sidebar_position:890},sidebar:"tutorialSidebar",previous:{title:"Tracing and CPU Profiling",permalink:"/docs/reference/config/trace-profile"},next:{title:"Experimental Feature",permalink:"/docs/reference/config/experimental-feature"}},c={},s=[{value:"Bash Completion",id:"bash-completion",level:2},{value:"Zsh Completion",id:"zsh-completion",level:2}],p={toc:s},u="wrapper";function m(e){let{components:n,...t}=e;return(0,r.yg)(u,(0,a.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"shell-completion"},"Shell Completion"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"aqua >= v1.11.0")," ",(0,r.yg)("a",{parentName:"li",href:"https://github.com/aquaproj/aqua/issues/856"},"#856")," ",(0,r.yg)("a",{parentName:"li",href:"https://github.com/aquaproj/aqua/pull/859"},"#859")),(0,r.yg)("li",{parentName:"ul"},"Fish shell: aqua >= ",(0,r.yg)("a",{parentName:"li",href:"https://github.com/aquaproj/aqua/releases/tag/v2.29.0"},"v2.29.0")," ",(0,r.yg)("a",{parentName:"li",href:"https://github.com/aquaproj/aqua/pull/2929"},"#2929"))),(0,r.yg)("p",null,"The commands ",(0,r.yg)("inlineCode",{parentName:"p"},"aqua completion <SHELL>")," outputs shell completion code.\nBy sourcing the output of ",(0,r.yg)("inlineCode",{parentName:"p"},"aqua completion <SHELL>")," in .bashrc, .zshrc, or ~/.config/fish/completions/aqua.fish,\naqua supports the shell completion."),(0,r.yg)("p",null,".bashrc"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"if command -v aqua &> /dev/null; then\n    source <(aqua completion bash)\nfi\n")),(0,r.yg)("p",null,".zshrc"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"if command -v aqua &> /dev/null; then\n    source <(aqua completion zsh)\nfi\n")),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://fishshell.com/docs/current/completions.html#where-to-put-completions"},"https://fishshell.com/docs/current/completions.html#where-to-put-completions")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"aqua completion fish > ~/.config/fish/completions/aqua.fish\n")),(0,r.yg)("h2",{id:"bash-completion"},"Bash Completion"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-console"},"$ aqua # Enter <Tab> Key\ncompletion  exec        g           generate    h           help        i           init        install     list        version     which\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-console"},"$ aqua i  # Enter <Tab> Key\ni        init     install\n")),(0,r.yg)("h2",{id:"zsh-completion"},"Zsh Completion"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-console"},"$ aqua # Enter <Tab> Key\ncompletion     -- Output shell completion script for bash or zsh\nexec           -- Execute tool\ngenerate    g  -- Search packages in registries and output the configuration interactively\nhelp        h  -- Shows a list of commands or help for one command\ninit           -- Create a configuration file if it doesn't exist\ninstall     i  -- Install tools\nlist           -- List packages in Registries\nversion        -- Show version\nwhich          -- Output the absolute file path of the given command\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-console"},"$ aqua i # Enter <Tab> Key\ninit        -- Create a configuration file if it doesn't exist\ninstall  i  -- Install tools\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-console"},"$ aqua i - # Enter <Tab> Key\n--all        --help       --only-link  --test       -a           -h           -l\n")))}m.isMDXComponent=!0}}]);