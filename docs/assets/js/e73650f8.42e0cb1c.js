"use strict";(self.webpackChunkaqua_docusaurus=self.webpackChunkaqua_docusaurus||[]).push([[4854],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>k});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=p(n),d=i,k=c["".concat(s,".").concat(d)]||c[d]||u[d]||a;return n?r.createElement(k,o(o({ref:t},m),{},{components:n})):r.createElement(k,o({ref:t},m))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8892:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(7462),i=(n(7294),n(3905));const a={sidebar_position:1800},o="version_constraint, version_overrides",l={unversionedId:"registry-config/version-overrides",id:"registry-config/version-overrides",title:"version_constraint, version_overrides",description:"Some package attributes like asset and files may be different by it's version.",source:"@site/docs/registry-config/version-overrides.md",sourceDirName:"registry-config",slug:"/registry-config/version-overrides",permalink:"/docs/registry-config/version-overrides",draft:!1,editUrl:"https://github.com/aquaproj/aquaproj.github.io/edit/main/docs/registry-config/version-overrides.md",tags:[],version:"current",sidebarPosition:1800,frontMatter:{sidebar_position:1800},sidebar:"tutorialSidebar",previous:{title:"Template String",permalink:"/docs/registry-config/template"},next:{title:"supported_if",permalink:"/docs/registry-config/supported-if"}},s={},p=[{value:"version_overrides",id:"version_overrides",level:2}],m={toc:p},c="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"version_constraint-version_overrides"},(0,i.kt)("inlineCode",{parentName:"h1"},"version_constraint"),", ",(0,i.kt)("inlineCode",{parentName:"h1"},"version_overrides")),(0,i.kt)("p",null,"Some package attributes like ",(0,i.kt)("inlineCode",{parentName:"p"},"asset")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"files")," may be different by it's version.\nFor example, the asset structure of ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/golang-migrate/migrate"},"golang-migrate")," was changed from v4.15.0.\nIn that case, the attributes ",(0,i.kt)("inlineCode",{parentName:"p"},"version_constraint")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"version_overrides")," are useful."),(0,i.kt)("p",null,"e.g."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"- type: github_release\n  repo_owner: golang-migrate\n  repo_name: migrate\n  asset: 'migrate.{{.OS}}-{{.Arch}}.tar.gz'\n  description: Database migrations. CLI and Golang library\n  version_constraint: 'semver(\"> 4.14.1\")'\n  version_overrides:\n  - version_constraint: 'semver(\"<= 4.14.1\")'\n    files:\n    - name: migrate\n      src: 'migrate.{{.OS}}-{{.Arch}}'\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"version_constraint")," is ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/antonmedv/expr"},"expr"),"'s expression.\nThe evaluation result must be a boolean."),(0,i.kt)("p",null,"Currently, the following values and functions are accessible in the expression."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Version"),": (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),") The package version"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"SemVer"),": (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),") The package version that ",(0,i.kt)("a",{parentName:"li",href:"/docs/registry-config/version-prefix"},"version_prefix")," is trimmed from ",(0,i.kt)("inlineCode",{parentName:"li"},"Version"),". For example, if ",(0,i.kt)("inlineCode",{parentName:"li"},"Version")," is ",(0,i.kt)("inlineCode",{parentName:"li"},"cli/v1.0.0")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"version_prefix")," is ",(0,i.kt)("inlineCode",{parentName:"li"},"cli/"),", then ",(0,i.kt)("inlineCode",{parentName:"li"},"SemVer")," is ",(0,i.kt)("inlineCode",{parentName:"li"},"v1.0.0")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"semver"),": (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"func(string) bool"),") Tests if the package version satisfies all the constraints. ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/hashicorp/go-version"},"hashicorp/go-version")," is used"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"semverWithVersion"),": (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"func(constraint, version string) bool"),") Tests if the package version satisfies all the constraints. ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/hashicorp/go-version"},"hashicorp/go-version")," is used"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"trimPrefix"),": (type ",(0,i.kt)("inlineCode",{parentName:"li"},"func(s, prefix string) string"),") Go's ",(0,i.kt)("a",{parentName:"li",href:"https://pkg.go.dev/strings#TrimPrefix"},"strings.TrimPrefix"))),(0,i.kt)("h2",{id:"version_overrides"},"version_overrides"),(0,i.kt)("p",null,"The list of version override."),(0,i.kt)("p",null,"The following attributes are supported."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"asset")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"checksum")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"complete_windows_ext")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"files")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"format_overrides")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"format")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"overrides")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"path")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"replacements")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"repo_name")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"repo_owner")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rosetta2")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"supported_envs")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"supported_if")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"type")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"url")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"windows_ext")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"version_prefix"))),(0,i.kt)("p",null,"e.g."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"  version_overrides:\n  - version_constraint: 'semver(\"<= 4.14.1\")'\n    files:\n    - name: migrate\n      src: 'migrate.{{.OS}}-{{.Arch}}'\n")))}u.isMDXComponent=!0}}]);