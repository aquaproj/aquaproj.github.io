"use strict";(globalThis.webpackChunkaqua_docusaurus=globalThis.webpackChunkaqua_docusaurus||[]).push([[5219],{5203:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>u,toc:()=>s});var n=i(8168),a=(i(6540),i(5680));const r={sidebar_position:250},o="update-checksum-action",u={unversionedId:"products/update-checksum-action",id:"products/update-checksum-action",title:"update-checksum-action",description:"https://github.com/aquaproj/update-checksum-action",source:"@site/docs/products/update-checksum-action.md",sourceDirName:"products",slug:"/products/update-checksum-action",permalink:"/docs/products/update-checksum-action",draft:!1,editUrl:"https://github.com/aquaproj/aquaproj.github.io/edit/main/docs/products/update-checksum-action.md",tags:[],version:"current",sidebarPosition:250,frontMatter:{sidebar_position:250},sidebar:"tutorialSidebar",previous:{title:"aqua-renovate-config",permalink:"/docs/products/aqua-renovate-config"},next:{title:"devcontainer-features",permalink:"/docs/products/devcontainer-features"}},c={},s=[{value:"\u26a0\ufe0f Please consider autofix.ci or Securefix Action",id:"\ufe0f-please-consider-autofixci-or-securefix-action",level:2},{value:"Reusable Workflow",id:"reusable-workflow",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Example",id:"example",level:2},{value:"Inputs",id:"inputs",level:2},{value:"Required Environment Variables",id:"required-environment-variables",level:2},{value:"Outputs",id:"outputs",level:2}],p={toc:s},l="wrapper";function m({components:e,...t}){return(0,a.yg)(l,(0,n.A)({},p,t,{components:e,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"update-checksum-action"},"update-checksum-action"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/update-checksum-action"},"https://github.com/aquaproj/update-checksum-action")),(0,a.yg)("p",null,"GitHub Actions to update aqua-checksums.json. If aqua-checksums.json isn't latest, update aqua-checksums.json and push a commit"),(0,a.yg)("p",null,"About aqua's Checksum Verification, please see ",(0,a.yg)("a",{parentName:"p",href:"/docs/reference/security/checksum"},"the document")," too."),(0,a.yg)("h2",{id:"\ufe0f-please-consider-autofixci-or-securefix-action"},"\u26a0\ufe0f Please consider autofix.ci or Securefix Action"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/docs/guides/checksum#recommend-autofixci-or-securefix-action-instead-of-update-checksum-action-and-update-checksum-workflow"},"We recommend autofix.ci or Securefix Action rather than this action.")),(0,a.yg)("h2",{id:"reusable-workflow"},"Reusable Workflow"),(0,a.yg)("p",null,"Please see ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/update-checksum-workflow"},"update-checksum-workflow"),"."),(0,a.yg)("h2",{id:"requirements"},"Requirements"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://aquaproj.github.io/"},"aqua")),(0,a.yg)("admonition",{type:"info"},(0,a.yg)("p",{parentName:"admonition"},"As of update-checksum-action v0.2.5, ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/int128/ghcp"},"ghcp")," isn't necessary.")),(0,a.yg)("h2",{id:"example"},"Example"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://github.com/aquaproj/example-update-checksum/blob/main/.github/workflows/test.yaml"},"Workflow")),(0,a.yg)("h2",{id:"inputs"},"Inputs"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"working_directory"),": The working directory where ",(0,a.yg)("inlineCode",{parentName:"li"},"aqua update-checksum")," is executed. If this input is not specified, the command is run on the current working directory"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"prune"),": If this input is ",(0,a.yg)("inlineCode",{parentName:"li"},"true"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"aqua update-checksum")," is executed with ",(0,a.yg)("inlineCode",{parentName:"li"},"-prune")," option. This option removes unused checksums from the checksum file. If this input is not specified, ",(0,a.yg)("inlineCode",{parentName:"li"},"false")," is used."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"skip_push"),": If this input is ",(0,a.yg)("inlineCode",{parentName:"li"},"true"),", the action checks if the checksum file is up-to-date, but does not push a commit to update it. If this input is not specified, ",(0,a.yg)("inlineCode",{parentName:"li"},"false")," is used."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"read_checksum_token"),": This token overrides ",(0,a.yg)("inlineCode",{parentName:"li"},"AQUA_GITHUB_TOKEN")," to executes ",(0,a.yg)("inlineCode",{parentName:"li"},"aqua update-checksum"),". It must have ",(0,a.yg)("inlineCode",{parentName:"li"},"contents:read")," permission about all repositories in tools managed by ",(0,a.yg)("inlineCode",{parentName:"li"},"aqua"),". This input is useful to fetch checksum from private repositories."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"securefix_action_server_repository"),": The GitHub repository for the ",(0,a.yg)("a",{parentName:"li",href:"https://github.com/csm-actions/securefix-action"},"Securefix Action server"),". If this is set, this action uses Securefix Action to update aqua-checksums.json."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"securefix_action_app_id"),": The GitHub App ID for the Securefix Action client."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"securefix_action_app_private_key"),": The GitHub App private key for the Securefix Action client.")),(0,a.yg)("h2",{id:"required-environment-variables"},"Required Environment Variables"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"GITHUB_TOKEN"),": GitHub Access Token. This is used to push a commit.")),(0,a.yg)("p",null,"Required permissions: ",(0,a.yg)("inlineCode",{parentName:"p"},"contents: write")),(0,a.yg)("admonition",{type:"info"},(0,a.yg)("p",{parentName:"admonition"},(0,a.yg)("del",{parentName:"p"},"Unfortunately, fine-grained personal access token is unavailable at the moment because it doesn't support GraphQL API."),"\n",(0,a.yg)("del",{parentName:"p"},(0,a.yg)("a",{parentName:"del",href:"https://github.com/cli/cli/issues/6680"},"https://github.com/cli/cli/issues/6680"))),(0,a.yg)("p",{parentName:"admonition"},"2023-04-27 ",(0,a.yg)("a",{parentName:"p",href:"https://github.blog/changelog/2023-04-27-graphql-improvements-for-fine-grained-pats-and-github-apps/"},"fine-grained access token supports GraphQL API now."))),(0,a.yg)("h2",{id:"outputs"},"Outputs"),(0,a.yg)("p",null,"Nothing."))}m.isMDXComponent=!0},5680:(e,t,i)=>{i.d(t,{xA:()=>p,yg:()=>h});var n=i(6540);function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),i.push.apply(i,n)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach(function(t){a(e,t,i[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))})}return e}function u(e,t){if(null==e)return{};var i,n,a=function(e,t){if(null==e)return{};var i,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||(a[i]=e[i]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},l="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef(function(e,t){var i=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),l=s(i),d=a,h=l["".concat(c,".").concat(d)]||l[d]||m[d]||r;return i?n.createElement(h,o(o({ref:t},p),{},{components:i})):n.createElement(h,o({ref:t},p))});function h(e,t){var i=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=i.length,o=new Array(r);o[0]=d;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u[l]="string"==typeof e?e:a,o[1]=u;for(var s=2;s<r;s++)o[s]=i[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,i)}d.displayName="MDXCreateElement"}}]);