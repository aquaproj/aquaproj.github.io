"use strict";(self.webpackChunkaqua_docusaurus=self.webpackChunkaqua_docusaurus||[]).push([[5941],{5680:(e,t,a)=>{a.d(t,{xA:()=>l,yg:()=>y});var r=a(6540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var u=r.createContext({}),c=function(e){var t=r.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},l=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},g="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,u=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),g=c(a),p=n,y=g["".concat(u,".").concat(p)]||g[p]||f[p]||i;return a?r.createElement(y,s(s({ref:t},l),{},{components:a})):r.createElement(y,s({ref:t},l))}));function y(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,s=new Array(i);s[0]=p;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[g]="string"==typeof e?e:n,s[1]=o;for(var c=2;c<i;c++)s[c]=a[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}p.displayName="MDXCreateElement"},1679:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>f,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=a(8168),n=(a(6540),a(5680));const i={sidebar_position:1260},s="GitHub Artifact Attestations",o={unversionedId:"reference/security/github-artifact-attestations",id:"reference/security/github-artifact-attestations",title:"GitHub Artifact Attestations",description:"- aqua >= v2.35.0 #3119",source:"@site/docs/reference/security/github-artifact-attestations.md",sourceDirName:"reference/security",slug:"/reference/security/github-artifact-attestations",permalink:"/docs/reference/security/github-artifact-attestations",draft:!1,editUrl:"https://github.com/aquaproj/aquaproj.github.io/edit/main/docs/reference/security/github-artifact-attestations.md",tags:[],version:"current",sidebarPosition:1260,frontMatter:{sidebar_position:1260},sidebar:"tutorialSidebar",previous:{title:"Minisign",permalink:"/docs/reference/security/minisign"},next:{title:"AQUA_X_SYS_EXEC",permalink:"/docs/reference/execve-2"}},u={},c=[{value:"How to verify packages",id:"how-to-verify-packages",level:2},{value:"Disable the verification of GitHub Artifact Attestations",id:"disable-the-verification-of-github-artifact-attestations",level:3},{value:"Registry Settings",id:"registry-settings",level:2}],l={toc:c},g="wrapper";function f(e){let{components:t,...a}=e;return(0,n.yg)(g,(0,r.A)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"github-artifact-attestations"},"GitHub Artifact Attestations"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"aqua >= v2.35.0")," ",(0,n.yg)("a",{parentName:"li",href:"https://github.com/aquaproj/aqua/pull/3119"},"#3119"))),(0,n.yg)("p",null,"You can verify packages' ",(0,n.yg)("a",{parentName:"p",href:"https://docs.github.com/en/actions/security-for-github-actions/using-artifact-attestations/using-artifact-attestations-to-establish-provenance-for-builds"},"GitHub Artifact Attestations")," if they are provided."),(0,n.yg)("h2",{id:"how-to-verify-packages"},"How to verify packages"),(0,n.yg)("p",null,"You don't have to do any special things.\nIf packages provide GitHub Artifact Attestations and registries are configured, packages are verified when you install them.\naqua uses ",(0,n.yg)("a",{parentName:"p",href:"https://cli.github.com/"},"GitHub CLI")," internally, but aqua installs it in ",(0,n.yg)("inlineCode",{parentName:"p"},"$(aqua root-dir)")," automatically, so you don't have to install it."),(0,n.yg)("p",null,"e.g."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-yaml"},"# aqua.yaml\nchecksum:\n  enabled: true\nregistries:\n  - type: standard\n    ref: f9cce37273a70e2f5664fb4c3708169ffe7e320c # TODO update\npackages:\n  - name: suzuki-shunsuke/mkghtag@v0.1.5-3\n")),(0,n.yg)("p",null,"mkghtag provides GitHub Artifact Attestations."),(0,n.yg)("p",null,(0,n.yg)("a",{parentName:"p",href:"https://github.com/suzuki-shunsuke/mkghtag/attestations"},"https://github.com/suzuki-shunsuke/mkghtag/attestations")),(0,n.yg)("p",null,"When you install mkghtag, GitHub Artifact Attestations are verified."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-console"},"$ aqua i\n...\nINFO[0000] verify GitHub Artifact Attestations           aqua_version= env=darwin/arm64 exe_name=mkghtag package_name=suzuki-shunsuke/mkghtag package_version=v0.1.5-3 program=aqua registry=standard\nLoaded digest sha256:5e79e447d4a664da3fbed12c6486bfb18eeb846d9aceb7b6eaa42277f04dcf6b for file:///var/folders/fc/1bgyy3_d3x90m_t04qbw5f8m0000gn/T/767459864\nLoaded 1 attestation from GitHub API\n\u2713 Verification succeeded!\n\nsha256:5e79e447d4a664da3fbed12c6486bfb18eeb846d9aceb7b6eaa42277f04dcf6b was attested by:\nREPO                                 PREDICATE_TYPE                  WORKFLOW                                                                   \nsuzuki-shunsuke/go-release-workflow  https://slsa.dev/provenance/v1  .github/workflows/release.yaml@refs/heads/feat-github-artifact-attestations\n...\n")),(0,n.yg)("h3",{id:"disable-the-verification-of-github-artifact-attestations"},"Disable the verification of GitHub Artifact Attestations"),(0,n.yg)("p",null,"We recommend enabling the verification for security, but you can disable the verification by the environment variable."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sh"},"export AQUA_DISABLE_GITHUB_ARTIFACT_ATTESTATION=true\n")),(0,n.yg)("h2",{id:"registry-settings"},"Registry Settings"),(0,n.yg)("p",null,"e.g."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-yaml"},"packages:\n  - type: github_release\n    repo_owner: suzuki-shunsuke\n    repo_name: mkghtag\n    asset: mkghtag_{{.OS}}_{{.Arch}}.{{.Format}}\n    format: tar.gz\n    github_artifact_attestations: # asset's GitHub Artifact Attestations\n      signer-workflow: suzuki-shunsuke/go-release-workflow/.github/workflows/release.yaml\n    checksum:\n      type: github_release\n      asset: mkghtag_{{trimV .Version}}_checksums.txt\n      algorithm: sha256\n      github_artifact_attestations: # checksum's GitHub Artifact Attestations\n        signer-workflow: suzuki-shunsuke/go-release-workflow/.github/workflows/release.yaml\n")))}f.isMDXComponent=!0}}]);